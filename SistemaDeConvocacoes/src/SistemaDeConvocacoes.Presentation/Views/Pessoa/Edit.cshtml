@model SisConv.Application.ViewModels.PessoaViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    <h4>PessoaViewModel</h4>
    <hr/>
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @Html.HiddenFor(model => model.PessoaId)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Nome, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Naturalidade, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Naturalidade, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Naturalidade, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mae, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mae, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Mae, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pai, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pai, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Pai, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Documento, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Documento, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Documento, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrgaoEmissor, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrgaoEmissor, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.OrgaoEmissor, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sexo, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sexo, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Sexo, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EstadoCivil, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.EstadoCivil, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.EstadoCivil, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataNascimento, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataNascimento, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.DataNascimento, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Filhos, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Filhos, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Filhos, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Endereco, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Endereco, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Endereco, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Numero, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Numero, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Numero, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Complemento, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Complemento, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Complemento, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bairro, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bairro, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Bairro, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cep, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cep, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Cep, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cidade, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cidade, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Cidade, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Uf, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Uf, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Uf, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cargo, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cargo, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Cargo, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Deficiente, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Deficiente)
                @Html.ValidationMessageFor(model => model.Deficiente, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Deficiencia, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Deficiencia, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Deficiencia, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CondicaoEspecial, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.CondicaoEspecial, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CondicaoEspecial, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cpf, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cpf, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Cpf, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Afro, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Afro)
                @Html.ValidationMessageFor(model => model.Afro, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default"/>
        </div>
    </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>