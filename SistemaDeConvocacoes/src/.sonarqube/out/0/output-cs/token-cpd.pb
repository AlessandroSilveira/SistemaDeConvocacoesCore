Ç
{C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Admin.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
Admin 
{ 
public 
Guid 
AdminId 
{ 
get !
;! "
set# &
;& '
}( )
public		 
string		 
Nome		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 
Email

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
string 
Empresa 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Cnpj 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Telefone 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
byte 
[ 
] 
Imagem 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Senha 
{ 
get !
;! "
set# &
;& '
}( )
} 
} ¯

ÅC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\AspNetRoles.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
AspNetRoles $
{ 
public		 
AspNetRoles		 
(		 
)		 
{

 	
AspNetUserRoles 
= 
new !
HashSet" )
<) *
AspNetUserRoles* 9
>9 :
(: ;
); <
;< =
} 	
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
DateTime 
	CreatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
virtual 
ICollection "
<" #
AspNetUserRoles# 2
>2 3
AspNetUserRoles4 C
{D E
getF I
;I J
setK N
;N O
}P Q
} 
} ¥	
ÜC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\AspNetUserClaims.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
AspNetUserClaims )
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
UserId 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
string		 
	ClaimType		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
string

 

ClaimValue

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
virtual 
AspNetUsers "
User# '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} ¶
ÜC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\AspNetUserLogins.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
AspNetUserLogins )
{ 
public 
string 
LoginProvider #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public		 
string		 
ProviderKey		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public

 
string

 
UserId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
virtual 
AspNetUsers "
User# '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} ∞
ÖC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\AspNetUserRoles.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
AspNetUserRoles (
{ 
public 
string 
UserId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
RoleId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
virtual 
AspNetRoles "
Role# '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public		 
virtual		 
AspNetUsers		 "
User		# '
{		( )
get		* -
;		- .
set		/ 2
;		2 3
}		4 5
}

 
} ¢
ÅC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\AspNetUsers.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
AspNetUsers $
{ 
public 
AspNetUsers 
( 
) 
{		 	
AspNetUserClaims

 
=

 
new

 "
HashSet

# *
<

* +
AspNetUserClaims

+ ;
>

; <
(

< =
)

= >
;

> ?
AspNetUserLogins 
= 
new "
HashSet# *
<* +
AspNetUserLogins+ ;
>; <
(< =
)= >
;> ?
AspNetUserRoles 
= 
new !
HashSet" )
<) *
AspNetUserRoles* 9
>9 :
(: ;
); <
;< =
} 	
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
EmailConfirmed "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
PasswordHash "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
SecurityStamp #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
bool  
PhoneNumberConfirmed (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
bool 
TwoFactorEnabled $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
LockoutEndDateUtc *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
bool 
LockoutEnabled "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
AccessFailedCount $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ICollection "
<" #
AspNetUserClaims# 3
>3 4
AspNetUserClaims5 E
{F G
getH K
;K L
setM P
;P Q
}R S
public 
virtual 
ICollection "
<" #
AspNetUserLogins# 3
>3 4
AspNetUserLogins5 E
{F G
getH K
;K L
setM P
;P Q
}R S
public 
virtual 
ICollection "
<" #
AspNetUserRoles# 2
>2 3
AspNetUserRoles4 C
{D E
getF I
;I J
setK N
;N O
}P Q
} 
}   π

{C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Cargo.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
Cargo 
{ 
public 
Guid 
CargoId 
{ 
get !
;! "
set# &
;& '
}( )
public 
Guid 

ProcessoId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
string		 
Nome		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 
CodigoCargo

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
public 
virtual 
Processo 
Processo  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} Ù
}C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Cliente.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
Cliente  
{ 
public 
Cliente 
( 
) 
{		 	
	Processos

 
=

 
new

 
HashSet

 #
<

# $
Processo

$ ,
>

, -
(

- .
)

. /
;

/ 0
} 	
public 
Guid 
	ClienteId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Cnpj 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Telefone 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Imagem 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
virtual 
ICollection "
<" #
Processo# +
>+ ,
	Processos- 6
{7 8
get9 <
;< =
set> A
;A B
}C D
} 
} ·
ÄC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Convocacao.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

class 

Convocacao 
{ 
public 

Convocacao 
( 
) 
{		 	
ConvocacaoId

 
=

 
Guid

 
.

  
NewGuid

  '
(

' (
)

( )
;

) *
} 	
public 
Guid 
ConvocacaoId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
Guid 

ProcessoId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Guid 
ConvocadoId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime !
DataEntregaDocumentos -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
string #
HorarioEntregaDocumento -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
string $
EnderecoEntregaDocumento .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
bool 
EnviouEmail 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 

Desistente  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
StatusConvocacao &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
StatusContratacao '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} ≠6
C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Convocado.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
	Convocado "
{ 
public 
Guid 
ConvocadoId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
Guid 

ProcessoId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
string		 
	Inscricao		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
string

 
Nome

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
string 
Mae 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Sexo 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
	Documento 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Cpf 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Telefone 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Celular 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Endereco 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Numero 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Complemento !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Bairro 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Cidade 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Cep 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Cargo 
{ 
get !
;! "
set# &
;& '
}( )
public 
Guid 
CargoId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	Pontuacao 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
Posicao 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
	Resultado 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Naturalidade "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
Pai 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
EstadoCivil !
{" #
get$ '
;' (
set) ,
;, -
}. /
public   
string   
DataNascimento   $
{  % &
get  ' *
;  * +
set  , /
;  / 0
}  1 2
public!! 
string!! 
FatorSanguineo!! $
{!!% &
get!!' *
;!!* +
set!!, /
;!!/ 0
}!!1 2
public"" 
string"" 
Doador"" 
{"" 
get"" "
;""" #
set""$ '
;""' (
}"") *
public## 
string## 
Recados## 
{## 
get##  #
;### $
set##% (
;##( )
}##* +
public$$ 
string$$ 
Nacionalidade$$ #
{$$$ %
get$$& )
;$$) *
set$$+ .
;$$. /
}$$0 1
public%% 
string%% 
GrauInstrucao%% #
{%%$ %
get%%& )
;%%) *
set%%+ .
;%%. /
}%%0 1
public&& 
string&& 
InstituicaoEnsino&& '
{&&( )
get&&* -
;&&- .
set&&/ 2
;&&2 3
}&&4 5
public'' 
string'' 
TelefoneIes'' !
{''" #
get''$ '
;''' (
set'') ,
;'', -
}''. /
public(( 
string(( 
Curso(( 
{(( 
get(( !
;((! "
set((# &
;((& '
}((( )
public)) 
string)) 
HorarioAulaIes)) $
{))% &
get))' *
;))* +
set)), /
;))/ 0
}))1 2
public** 
string** 
PeriodoAtual** "
{**# $
get**% (
;**( )
set*** -
;**- .
}**/ 0
public++ 
string++ 
ColacaoGrau++ !
{++" #
get++$ '
;++' (
set++) ,
;++, -
}++. /
public,, 
string,, 
Agencia,, 
{,, 
get,,  #
;,,# $
set,,% (
;,,( )
},,* +
public-- 
string-- 
NomeAgencia-- !
{--" #
get--$ '
;--' (
set--) ,
;--, -
}--. /
public.. 
string.. 
ContaCorrente.. #
{..$ %
get..& )
;..) *
set..+ .
;... /
}..0 1
public// 
string// 
Uf// 
{// 
get// 
;// 
set//  #
;//# $
}//% &
public00 
string00 
OrgaoEmissor00 "
{00# $
get00% (
;00( )
set00* -
;00- .
}00/ 0
}11 
}22 ”
ÇC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\DadosContato.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
DadosContato %
{ 
public 
string 
CodigoPessoa "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
EMail 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Cep 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
TipoDeLogradouro &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public		 
string		 
Endereco		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
string

 
Numero

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
string 
Complemento !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Estado 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Cidade 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Bairro 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
? 

IdConcurso 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ï
ÉC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\DadosPessoais.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
DadosPessoais &
{ 
public 
string 
Codigo 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Nacionalidade		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
public

 
string

 
NaturalidadeUf

 $
{

% &
get

' *
;

* +
set

, /
;

/ 0
}

1 2
public 
string 
	Municipio 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
DataDeNascimento (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
Sexo 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
EstadoCivil !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Rg 
{ 
get 
; 
set  #
;# $
}% &
public 
DateTime 
DataExpedicaoRg '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
OrgaoExpeditorRg &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
UfRg 
{ 
get  
;  !
set" %
;% &
}' (
public 
string !
NecessidadesEspeciais +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
string 
DataENascimento2 &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 

IdConcurso 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
DataExpedicaoRg2 &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} ‡
ÇC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Documentacao.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
Documentacao %
{ 
public 
Documentacao 
( 
) 
{ 	
DocumentoId		 
=		 
Guid		 
.		 
NewGuid		 &
(		& '
)		' (
;		( )
}

 	
public 
Guid 
DocumentoId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
Guid 

ProcessoId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
	Descricao 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
DataCriacao #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
Path 
{ 
get  
;  !
set" %
;% &
}' (
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
public 
virtual 
Processo 
Processo  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} ‰
C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Documento.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
	Documento "
{ 
public 
Guid 
DocumentoId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
Guid 

ProcessoId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
string		 
	Descricao		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
DateTime

 
DataCriacao

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
string 
Path 
{ 
get  
;  !
set" %
;% &
}' (
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
public 
virtual 
Processo 
Processo  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} é
àC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\DocumentoCandidato.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
DocumentoCandidato +
{ 
public 
Guid  
DocumentoCandidatoId (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
Guid 

ProcessoId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
Guid		 
ConvocadoId		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
string

 
	Documento

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
DateTime 
DataInclusao $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
Path 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Ativo 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
TipoDocumento #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} ◊(
|C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Pessoa.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
Pessoa 
{ 
public 
Pessoa 
( 
) 
{		 	
TelefoneNavigation

 
=

  
new

! $
HashSet

% ,
<

, -
Telefone

- 5
>

5 6
(

6 7
)

7 8
;

8 9
} 	
public 
Guid 
PessoaId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Naturalidade "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
Mae 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Pai 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
	Documento 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
OrgaoEmissor "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
Sexo 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
EstadoCivil 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
? 
DataNascimento '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
int 
? 
Filhos 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Endereco 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Numero 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Complemento !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Bairro 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Cep 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Cidade 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Uf 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Cargo 
{ 
get !
;! "
set# &
;& '
}( )
public   
bool   
?   

Deficiente   
{    !
get  " %
;  % &
set  ' *
;  * +
}  , -
public!! 
string!! 
Deficiencia!! !
{!!" #
get!!$ '
;!!' (
set!!) ,
;!!, -
}!!. /
public"" 
string"" 
CondicaoEspecial"" &
{""' (
get"") ,
;"", -
set"". 1
;""1 2
}""3 4
public## 
string## 
Cpf## 
{## 
get## 
;##  
set##! $
;##$ %
}##& '
public$$ 
string$$ 
Email$$ 
{$$ 
get$$ !
;$$! "
set$$# &
;$$& '
}$$( )
public%% 
bool%% 
?%% 
Afro%% 
{%% 
get%% 
;%%  
set%%! $
;%%$ %
}%%& '
public&& 
string&& 
Telefone&& 
{&&  
get&&! $
;&&$ %
set&&& )
;&&) *
}&&+ ,
public'' 
DateTime'' 
?'' 
DataCadastro'' %
{''& '
get''( +
;''+ ,
set''- 0
;''0 1
}''2 3
public)) 
virtual)) 
ICollection)) "
<))" #
Telefone))# +
>))+ ,
TelefoneNavigation))- ?
{))@ A
get))B E
;))E F
set))G J
;))J K
}))L M
}** 
}++ à
ÑC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\PrimeiroAcesso.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
PrimeiroAcesso '
{ 
public 
Guid 
PrimeiroAcessoId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public		 
DateTime		 
Data		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
Guid

 
ConvocadoId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
} 
} ‘
~C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Processo.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
Processo !
{ 
public 
Processo 
( 
) 
{		 	
Cargos

 
=

 
new

 
HashSet

  
<

  !
Cargo

! &
>

& '
(

' (
)

( )
;

) *

Documentos 
= 
new 
HashSet $
<$ %
	Documento% .
>. /
(/ 0
)0 1
;1 2
} 	
public 
Guid 

ProcessoId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Guid 
	ClienteId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
DataCriacao #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string (
TextoDeAceitacaoDaConvocacao 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
string %
TextoInicialTelaConvocado /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
string  
TextoParaDesistentes *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
public 
virtual 
Cliente 
Cliente &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
virtual 
ICollection "
<" #
Cargo# (
>( )
Cargos* 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
virtual 
ICollection "
<" #
	Documento# ,
>, -

Documentos. 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
} 
} µ

~C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Telefone.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
Telefone !
{ 
public 
int 

IdTelefone 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
CodigoPessoa "
{# $
get% (
;( )
set* -
;- .
}/ 0
public		 
string		 
CodTipoTelefone		 %
{		& '
get		( +
;		+ ,
set		- 0
;		0 1
}		2 3
public

 
string

 
Ddd

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
public 
string 
Numero 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
	AceitaSms 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} ä
ÉC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\TipoDocumento.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
TipoDocumento &
{ 
public 
Guid 
TipoDocumentoId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
TipoDocumentos $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public		 
bool		 
Ativo		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public

 
Guid

 

ProcessoId

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
} 
} ∂
}C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Entities\Usuario.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Entities& .
{ 
public 

partial 
class 
Usuario  
{ 
public 
Guid 
	UsuarioId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
string

 
Login

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
string 
Senha 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Perfil 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool 
Ativo 
{ 
get 
;  
set! $
;$ %
}& '
} 
} π
ÄC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Enums\AssuntosEmail.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Enums& +
{ 
public 

enum 
AssuntosEmail 
{ 

Convocacao 
, 
EsqueciSenha 
} 
} ‹
~C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Enums\EstadoCivil.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Enums& +
{ 
public 

enum 
EstadoCivil 
{ 
[ 	
Description	 
( 
$str  
)  !
]! "
Casado 
= 
$num 
, 
[

 	
Description

	 
(

 
$str

 "
)

" #
]

# $
Solteiro 
= 
$num 
, 
[ 	
Description	 
( 
$str $
)$ %
]% &

Divorciado 
= 
$num 
, 
[ 	
Description	 
( 
$str -
)- .
]. /!
SeparadoJudicialmente 
= 
$num  !
,! "
[ 	
Description	 
( 
$str 
)  
]  !
Viuvo 
= 
$num 
, 
[ 	
Description	 
( 
$str "
)" #
]# $
Concubinato 
= 
$num 
, 
[ 	
Description	 
( 
$str 
) 
] 
Outros 
= 
$num 
, 
[ 	
Description	 
( 
$str $
)$ %
]% &
UniaoEst√°vel 
= 
$num 
} 
} ˛
zC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Enums\Estados.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Enums& +
{ 
public 

enum 
Estados 
{ 
[ 	
Description	 
( 
$str 
) 
] 
AC 

,
 
[		 	
Description			 
(		 
$str		 
)		 
]		 
AL

 

,


 
[ 	
Description	 
( 
$str 
) 
] 
AP 

,
 
[ 	
Description	 
( 
$str 
) 
] 
AM 

,
 
[ 	
Description	 
( 
$str 
) 
] 
BA 

,
 
[ 	
Description	 
( 
$str 
) 
] 
CE 

,
 
[ 	
Description	 
( 
$str 
) 
] 
DF 

,
 
[ 	
Description	 
( 
$str 
) 
] 
ES 

,
 
[ 	
Description	 
( 
$str 
) 
] 
GO 

,
 
[ 	
Description	 
( 
$str 
) 
] 
MA 

,
 
[ 	
Description	 
( 
$str 
) 
] 
MT 

,
 
[ 	
Description	 
( 
$str 
) 
] 
MS 

,
 
[ 	
Description	 
( 
$str 
) 
] 
MG   

,  
 
[!! 	
Description!!	 
(!! 
$str!! 
)!! 
]!! 
PA"" 

,""
 
[## 	
Description##	 
(## 
$str## 
)## 
]## 
PB$$ 

,$$
 
[%% 	
Description%%	 
(%% 
$str%% 
)%% 
]%% 
PR&& 

,&&
 
['' 	
Description''	 
('' 
$str'' 
)'' 
]'' 
PE(( 

,((
 
[)) 	
Description))	 
()) 
$str)) 
))) 
])) 
PI** 

,**
 
[++ 	
Description++	 
(++ 
$str++ 
)++ 
]++ 
RJ,, 

,,,
 
[-- 	
Description--	 
(-- 
$str-- 
)-- 
]-- 
RN.. 

,..
 
[// 	
Description//	 
(// 
$str// 
)// 
]// 
RS00 

,00
 
[11 	
Description11	 
(11 
$str11 
)11 
]11 
RO22 

,22
 
[33 	
Description33	 
(33 
$str33 
)33 
]33 
RR44 

,44
 
[55 	
Description55	 
(55 
$str55 
)55 
]55 
SC66 

,66
 
[77 	
Description77	 
(77 
$str77 
)77 
]77 
SP88 

,88
 
[99 	
Description99	 
(99 
$str99 
)99 
]99 
SE:: 

,::
 
[;; 	
Description;;	 
(;; 
$str;; 
);; 
];; 
TO<< 

}== 
}>> Ï
ÅC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Enums\FatorSanguineo.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Enums& +
{ 
public 

enum 
FatorSanguineo 
{		 
[

 	
Description

	 
(

 
$str

 
)

 
]

 

O_Negativo 
, 
[ 	
Description	 
( 
$str 
) 
] 

O_Positivo 
, 
[ 	
Description	 
( 
$str 
) 
] 

A_Negativo 
, 
[ 	
Description	 
( 
$str 
) 
] 

A_Positivo 
, 
[ 	
Description	 
( 
$str 
) 
] 

B_Negativo 
, 
[ 	
Description	 
( 
$str 
) 
] 

B_Positivo 
, 
[ 	
Description	 
( 
$str 
) 
] 
AB_Negativo 
, 
[ 	
Description	 
( 
$str 
) 
] 
AB_Positivo 
, 
} 
} 

ÄC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Enums\GrauInstrucao.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Enums& +
{ 
public 

enum 
GrauInstrucao 
{ 
[ 	
Description	 
( 
$str ,
), -
]- .
EnsinoMedioCompleto 
, 
[		 	
Description			 
(		 
$str		 1
)		1 2
]		2 3$
EnsinoSuperiorIncompleto

  
,

  !
[ 	
Description	 
( 
$str /
)/ 0
]0 1"
EnsinoSuperiorCompleto 
, 
[ 	
Description	 
( 
$str $
)$ %
]% &
Especializado 
, 
[ 	
Description	 
( 
$str 
)  
]  !
Mestrado 
, 
[ 	
Description	 
( 
$str  
)  !
]! "
	Doutorado 
, 
[ 	
Description	 
( 
$str $
)$ %
]% &
PosDoutorado 
} 
} ë
ÄC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Enums\Nacionalidade.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Enums& +
{ 
public 

enum 
Nacionalidade 
{ 
[ 	
Description	 
( 
$str $
)$ %
]% &

Brasileiro 
, 
[		 	
Description			 
(		 
$str		 &
)		& '
]		' (
Naturalizado

 
,

 
[ 	
Description	 
( 
$str 
) 
] 
Outros 
} 
} ‡
wC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Enums\Sexo.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Enums& +
{ 
public 

enum 
Sexo 
{		 
[

 	
Description

	 
(

 
$str

 
)

  
]

  !
F 	
,	 

[ 	
Description	 
( 
$str  
)  !
]! "
M 	
} 
} ‰
yC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Enums\SimNao.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Enums& +
{ 
public 

enum 
SimNao 
{		 
[

 	
Description

	 
(

 
$str

 
)

 
]

 
S 	
,	 

[ 	
Description	 
( 
$str 
) 
] 
N 	
} 
} ¸	
ÉC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Enums\StatusConvocacao.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Enums& +
{ 
public 

enum 
StatusConvocacao  
{ 
[ 	
Description	 
( 
$str <
)< =
]= >)
CompareceuEntregaDocumentacao %
,% &
[		 	
Description			 
(		 
$str		 @
)		@ A
]		A B,
 NaoCompareceuEntregaDocumentacao

 (
,

( )
[ 	
Description	 
( 
$str 4
)4 5
]5 6$
AguardandoTerminoEstagio  
,  !
[ 	
Description	 
( 
$str $
)$ %
]% &
EmConvocacao 
, 
[ 	
Description	 
( 
$str !
)! "
]" #

Contratado 
, 
[ 	
Description	 
( 
$str !
)! "
]" #

Desistente 
} 
} ƒ
~C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Helpers\SysConfig.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Helpers& -
{ 
public 

class 
	SysConfig 
: 

ISysConfig '
{		 
public

 
string

 
GetHelpFile

 !
(

! "
string

" (
page

) -
)

- .
{ 	
var 
ret 
= 
$str 
; 
return 
ret 
; 
} 	
} 
} ”
åC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Base\IRepositoryBase.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Base1 5
{ 
public		 

	interface		 
IRepositoryBase		 $
<		$ %
TEntity		% ,
>		, -
where		. 3
TEntity		4 ;
:		< =
class		> C
{

 
Task 
< 
TEntity 
> 
AddAsync 
( 
TEntity &
obj' *
)* +
;+ ,
Task 
< 
TEntity 
> 
GetByIdAsync "
(" #
Guid# '
id( *
)* +
;+ ,
Task 
< 
IEnumerable 
< 
TEntity  
>  !
>! "
GetAllAsync# .
(. /
)/ 0
;0 1
Task 
< 
TEntity 
> 
UpdateAsync !
(! "
TEntity" )
obj* -
)- .
;. /
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
TEntity  
>  !
>! "
SearchAsync# .
(. /

Expression/ 9
<9 :
Func: >
<> ?
TEntity? F
,F G
boolH L
>L M
>M N
	predicateO X
)X Y
;Y Z
Task 
Dispose 
( 
) 
; 
Task 
< 
TEntity 
> 
GetOneAsync !
(! "

Expression" ,
<, -
Func- 1
<1 2
TEntity2 9
,9 :
bool; ?
>? @
>@ A
	predicateB K
)K L
;L M
void 
DetachLocal 
( 
Func 
< 
TEntity %
,% &
bool' +
>+ ,
	predicate- 6
)6 7
;7 8
} 
} é
âC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Base\IServiceBase.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Base1 5
{ 
public		 

	interface		 
IServiceBase		 !
<		! "
TEntity		" )
>		) *
where		+ 0
TEntity		1 8
:		9 :
class		; @
{

 
Task 
Add 
( 
TEntity 
obj 
) 
; 
Task 
< 
TEntity 
> 
GetByIdAsync "
(" #
Guid# '
id( *
)* +
;+ ,
Task 
< 
IEnumerable 
< 
TEntity  
>  !
>! "
GetAllAsync# .
(. /
)/ 0
;0 1
Task 
UpdateAsync 
( 
TEntity  
obj! $
)$ %
;% &
Task 
RemoveAsync 
( 
Guid 
obj !
)! "
;" #
void 
Dispose 
( 
) 
; 
Task 
< 
IEnumerable 
< 
TEntity  
>  !
>! "
SearchAsync# .
(. /

Expression/ 9
<9 :
Func: >
<> ?
TEntity? F
,F G
boolH L
>L M
>M N
	predicateO X
)X Y
;Y Z
Task 
< 
TEntity 
> 
GetOneAsync !
(! "

Expression" ,
<, -
Func- 1
<1 2
TEntity2 9
,9 :
bool; ?
>? @
>@ A
	predicateB K
)K L
;L M
} 
} ´
âC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Helper\ISysConfig.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Helper1 7
{ 
public 

	interface 

ISysConfig 
{ 
string		 
GetHelpFile		 
(		 
string		 !
page		" &
)		& '
;		' (
}

 
} †
ïC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IAdminRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface 
IAdminRepository %
:& '
IRepositoryBase( 7
<7 8
Admin8 =
>= >
{ 
} 
}		 †
ïC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\ICargoRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface 
ICargoRepository %
:& '
IRepositoryBase( 7
<7 8
Cargo8 =
>= >
{ 
} 
}		 ¶
óC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IClienteRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface 
IClienteRepository '
:( )
IRepositoryBase* 9
<9 :
Cliente: A
>A B
{ 
} 
}		 Ø
öC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IConvocacaoRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface !
IConvocacaoRepository *
:+ ,
IRepositoryBase- <
<< =

Convocacao= G
>G H
{ 
} 
}		 ¨
ôC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IConvocadoRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface  
IConvocadoRepository )
:* +
IRepositoryBase, ;
<; <
	Convocado< E
>E F
{ 
} 
}		 ∏
üC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IDadosConvocadosRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface &
IDadosConvocadosRepository /
:0 1
IRepositoryBase2 A
<A B
	ConvocadoB K
>K L
{ 
} 
}		 ≤
úC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IDocumentacaoRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface #
IDocumentacaoRepository ,
:- .
IRepositoryBase/ >
<> ?
	Documento? H
>H I
{ 
} 
}		 «
¢C:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IDocumentoCandidatoRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface )
IDocumentoCandidatoRepository 2
:3 4
IRepositoryBase5 D
<D E
DocumentoCandidatoE W
>W X
{ 
}		 
}

 £
ñC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IPessoaRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface 
IPessoaRepository &
:' (
IRepositoryBase) 8
<8 9
Pessoa9 ?
>? @
{ 
} 
}		 ª
ûC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IPrimeiroAcessoRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface %
IPrimeiroAcessoRepository .
:/ 0
IRepositoryBase1 @
<@ A
PrimeiroAcessoA O
>O P
{ 
} 
}		 ©
òC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IProcessoRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface 
IProcessoRepository (
:) *
IRepositoryBase+ :
<: ;
Processo; C
>C D
{ 
} 
}		 ©
òC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\ITelefoneRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface 
ITelefoneRepository (
:) *
IRepositoryBase+ :
<: ;
Telefone; C
>C D
{ 
} 
}		 ∏
ùC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\ITipoDocumentoRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface $
ITipoDocumentoRepository -
:. /
IRepositoryBase0 ?
<? @
TipoDocumento@ M
>M N
{ 
}		 
}

 ¶
óC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Repositories\IUsuarioRepository.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Repositories1 =
{ 
public 

	interface 
IUsuarioRepository '
:( )
IRepositoryBase* 9
<9 :
Usuario: A
>A B
{ 
} 
}		 ˙!
ëC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\Base\ServiceBase.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
.9 :
Base: >
{		 
public

 

class

 
ServiceBase

 
<

 
TEntity

 $
>

$ %
:

& '
IDisposable

( 3
,

3 4
IServiceBase

5 A
<

A B
TEntity

B I
>

I J
where

K P
TEntity

Q X
:

Y Z
class

[ `
{ 
private 
readonly 
IRepositoryBase (
<( )
TEntity) 0
>0 1
_repositoryBase2 A
;A B
public 
ServiceBase 
( 
IRepositoryBase *
<* +
TEntity+ 2
>2 3
repositoryBase4 B
)B C
{ 	
_repositoryBase 
= 
repositoryBase ,
;, -
} 	
public 
async 
Task 
Add 
( 
TEntity %
obj& )
)) *
{ 	
await 
_repositoryBase  
.  !
AddAsync! )
() *
obj* -
)- .
;. /
} 	
public 
async 
Task 
< 
TEntity !
>! "
GetByIdAsync# /
(/ 0
Guid0 4
id5 7
)7 8
{ 	
return 
await 
_repositoryBase (
.( )
GetByIdAsync) 5
(5 6
id6 8
)8 9
;9 :
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
TEntity& -
>- .
>. /
GetAllAsync0 ;
(; <
)< =
{ 	
return 
await 
_repositoryBase (
.( )
GetAllAsync) 4
(4 5
)5 6
;6 7
}   	
public"" 
async"" 
Task"" 
UpdateAsync"" %
(""% &
TEntity""& -
obj"". 1
)""1 2
{## 	
await$$ 
_repositoryBase$$ "
.$$" #
UpdateAsync$$# .
($$. /
obj$$/ 2
)$$2 3
;$$3 4
}%% 	
public'' 
async'' 
Task'' 
RemoveAsync'' %
(''% &
Guid''& *
obj''+ .
)''. /
{(( 	
await)) 
_repositoryBase)) !
.))! "
RemoveAsync))" -
())- .
obj)). 1
)))1 2
;))2 3
}** 	
public.. 
async.. 
Task.. 
<.. 
IEnumerable.. %
<..% &
TEntity..& -
>..- .
>... /
SearchAsync..0 ;
(..; <

Expression..< F
<..F G
Func..G K
<..K L
TEntity..L S
,..S T
bool..U Y
>..Y Z
>..Z [
	predicate..\ e
)..e f
{// 	
return00 
await00 
_repositoryBase00 (
.00( )
SearchAsync00) 4
(004 5
	predicate005 >
)00> ?
;00? @
}11 	
public33 
async33 
Task33 
<33 
TEntity33 !
>33! "
GetOneAsync33# .
(33. /

Expression33/ 9
<339 :
Func33: >
<33> ?
TEntity33? F
,33F G
bool33H L
>33L M
>33M N
	predicate33O X
)33X Y
{44 	
return55 
await55 
_repositoryBase55 (
.55( )
GetOneAsync55) 4
(554 5
	predicate555 >
)55> ?
;55? @
}66 	
public88 
void88 
Dispose88 
(88 
)88 
{99 	
_repositoryBase:: 
.:: 
Dispose:: #
(::# $
)::$ %
;::% &
};; 	
}>> 
}?? ≈
éC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IAdminService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 
IAdminService		 "
:		# $
IDisposable		% 0
{

 
Task 
< 
Admin 
> 
AddAsync 
( 
Admin "
obj# &
)& '
;' (
Task 
< 
Admin 
> 
GetByIdAsync  
(  !
Guid! %
id& (
)( )
;) *
Task 
< 
IEnumerable 
< 
Admin 
> 
>  
GetAllAsync! ,
(, -
)- .
;. /
Task 
< 
Admin 
> 
UpdateAsync 
(  
Admin  %
obj& )
)) *
;* +
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
Admin 
> 
>  
SearchAsync! ,
(, -

Expression- 7
<7 8
Func8 <
<< =
Admin= B
,B C
boolD H
>H I
>I J
	predicateK T
)T U
;U V
Task 
< 
Admin 
> 
GetOneAsync 
(  

Expression  *
<* +
Func+ /
</ 0
Admin0 5
,5 6
bool7 ;
>; <
>< =
	predicate> G
)G H
;H I
} 
} Õ
îC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IAspNetRolesService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{		 
public

 

	interface

 
IAspNetRolesService

 (
:

) *
IDisposable

+ 6
{ 

IQueryable 
< 
AspNetRoles 
> 
GetAll  &
(& '
)' (
;( )
Task 
Create 
( 
AspNetRoles 
entity  &
)& '
;' (
Task 
Update 
( 
int 
id 
, 
AspNetRoles '
entity( .
). /
;/ 0
Task 
Delete 
( 
int 
id 
) 
; 
IEnumerable 
< 
AspNetRoles 
>  
Search! '
(' (

Expression( 2
<2 3
Func3 7
<7 8
AspNetRoles8 C
,C D
boolE I
>I J
>J K
	predicateL U
)U V
;V W
AspNetRoles 
GetOne 
( 

Expression %
<% &
Func& *
<* +
AspNetRoles+ 6
,6 7
bool8 <
>< =
>= >
	predicate? H
)H I
;I J
int 
SaveChanges 
( 
) 
; 
} 
} Œ
ôC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IAspNetUserClaimsService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{		 
public

 

	interface

 $
IAspNetUserClaimsService

 -
:

. /
IDisposable

0 ;
{ 

IQueryable 
< 
AspNetUserClaims #
># $
GetAll% +
(+ ,
), -
;- .
Task 
Create 
( 
AspNetUserClaims $
entity% +
)+ ,
;, -
Task 
Update 
( 
int 
id 
, 
AspNetUserClaims ,
entity- 3
)3 4
;4 5
Task 
Delete 
( 
int 
id 
) 
; 
IEnumerable 
< 
AspNetUserClaims $
>$ %
Search& ,
(, -

Expression- 7
<7 8
Func8 <
<< =
AspNetUserClaims= M
,M N
boolO S
>S T
>T U
	predicateV _
)_ `
;` a
AspNetUserClaims 
GetOne 
(  

Expression  *
<* +
Func+ /
</ 0
AspNetUserClaims0 @
,@ A
boolB F
>F G
>G H
	predicateI R
)R S
;S T
int 
SaveChanges 
( 
) 
; 
void 
Dispose 
( 
) 
; 
} 
} ¶
ôC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IAspNetUserLoginsService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{		 
public

 

	interface

 $
IAspNetUserLoginsService

 -
{ 

IQueryable 
< 
AspNetUserLogins #
># $
GetAll% +
(+ ,
), -
;- .
Task 
Create 
( 
AspNetUserLogins $
entity% +
)+ ,
;, -
Task 
Update 
( 
int 
id 
, 
AspNetUserLogins ,
entity- 3
)3 4
;4 5
Task 
Delete 
( 
int 
id 
) 
; 
IEnumerable 
< 
AspNetUserLogins $
>$ %
Search& ,
(, -

Expression- 7
<7 8
Func8 <
<< =
AspNetUserLogins= M
,M N
boolO S
>S T
>T U
	predicateV _
)_ `
;` a
AspNetUserLogins 
GetOne 
(  

Expression  *
<* +
Func+ /
</ 0
AspNetUserLogins0 @
,@ A
boolB F
>F G
>G H
	predicateI R
)R S
;S T
int 
SaveChanges 
( 
) 
; 
void 
Dispose 
( 
) 
; 
} 
} ≈
òC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IAspNetUserRolesService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{		 
public

 

	interface

 #
IAspNetUserRolesService

 ,
:

- .
IDisposable

/ :
{ 

IQueryable 
< 
AspNetUserRoles "
>" #
GetAll$ *
(* +
)+ ,
;, -
Task 
Create 
( 
AspNetUserRoles #
entity$ *
)* +
;+ ,
Task 
Update 
( 
int 
id 
, 
AspNetUserRoles +
entity, 2
)2 3
;3 4
Task 
Delete 
( 
int 
id 
) 
; 
IEnumerable 
< 
AspNetUserRoles #
># $
Search% +
(+ ,

Expression, 6
<6 7
Func7 ;
<; <
AspNetUserRoles< K
,K L
boolM Q
>Q R
>R S
	predicateT ]
)] ^
;^ _
AspNetUserRoles 
GetOne 
( 

Expression )
<) *
Func* .
<. /
AspNetUserRoles/ >
,> ?
bool@ D
>D E
>E F
	predicateG P
)P Q
;Q R
int 
SaveChanges 
( 
) 
; 
void 
Dispose 
( 
) 
; 
} 
} °
îC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IAspNetUsersService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{		 
public

 

	interface

 
IAspNetUsersService

 (
:

) *
IDisposable

+ 6
{ 

IQueryable 
< 
AspNetUsers 
> 
GetAll  &
(& '
)' (
;( )
Task 
Create 
( 
AspNetUsers 
entity  &
)& '
;' (
Task 
Update 
( 
int 
id 
, 
AspNetUsers '
entity( .
). /
;/ 0
Task 
Delete 
( 
int 
id 
) 
; 
IEnumerable 
< 
AspNetUsers 
>  
Search! '
(' (

Expression( 2
<2 3
Func3 7
<7 8
AspNetUsers8 C
,C D
boolE I
>I J
>J K
	predicateL U
)U V
;V W
AspNetUsers 
GetOne 
( 

Expression %
<% &
Func& *
<* +
AspNetUsers+ 6
,6 7
bool8 <
>< =
>= >
	predicate? H
)H I
;I J
int 
SaveChanges 
( 
) 
; 
void 
Dispose 
( 
) 
; 
} 
} ≈
éC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\ICargoService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 
ICargoService		 "
:		# $
IDisposable		% 0
{

 
Task 
< 
Cargo 
> 
AddAsync 
( 
Cargo "
obj# &
)& '
;' (
Task 
< 
Cargo 
> 
GetByIdAsync  
(  !
Guid! %
id& (
)( )
;) *
Task 
< 
IEnumerable 
< 
Cargo 
> 
>  
GetAllAsync! ,
(, -
)- .
;. /
Task 
< 
Cargo 
> 
UpdateAsync 
(  
Cargo  %
obj& )
)) *
;* +
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
Cargo 
> 
>  
SearchAsync! ,
(, -

Expression- 7
<7 8
Func8 <
<< =
Cargo= B
,B C
boolD H
>H I
>I J
	predicateK T
)T U
;U V
Task 
< 
Cargo 
> 
GetOneAsync 
(  

Expression  *
<* +
Func+ /
</ 0
Cargo0 5
,5 6
bool7 ;
>; <
>< =
	predicate> G
)G H
;H I
} 
} ›
êC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IClienteService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 
IClienteService		 $
:		% &
IDisposable		' 2
{

 
Task 
< 
Cliente 
> 
AddAsync 
( 
Cliente &
obj' *
)* +
;+ ,
Task 
< 
Cliente 
> 
GetByIdAsync "
(" #
Guid# '
id( *
)* +
;+ ,
Task 
< 
IEnumerable 
< 
Cliente  
>  !
>! "
GetAllAsync# .
(. /
)/ 0
;0 1
Task 
< 
Cliente 
> 
UpdateAsync !
(! "
Cliente" )
obj* -
)- .
;. /
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
Cliente  
>  !
>! "
SearchAsync# .
(. /

Expression/ 9
<9 :
Func: >
<> ?
Cliente? F
,F G
boolH L
>L M
>M N
	predicateO X
)X Y
;Y Z
Task 
< 
Cliente 
> 
GetOneAsync !
(! "

Expression" ,
<, -
Func- 1
<1 2
Cliente2 9
,9 :
bool; ?
>? @
>@ A
	predicateB K
)K L
;L M
} 
} ≥
èC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IConfiguration.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public 

	interface 
IConfiguration #
{ 
string 
	ObterSmtp 
( 
) 
; 
string 
ObterEmailFrom 
( 
) 
;  
string #
ObterPortaServidorEmail &
(& '
)' (
;( )
string 
ObterPasswordEmail !
(! "
)" #
;# $
}		 
}

 Ò
ìC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IConvocacaoService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 
IConvocacaoService		 '
:		( )
IDisposable		* 5
{

 
Task 
< 

Convocacao 
> 
AddAsync !
(! "

Convocacao" ,
obj- 0
)0 1
;1 2
Task 
< 

Convocacao 
> 
GetByIdAsync %
(% &
Guid& *
id+ -
)- .
;. /
Task 
< 
IEnumerable 
< 

Convocacao #
># $
>$ %
GetAllAsync& 1
(1 2
)2 3
;3 4
Task 
< 

Convocacao 
> 
UpdateAsync $
($ %

Convocacao% /
obj0 3
)3 4
;4 5
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 

Convocacao #
># $
>$ %
SearchAsync& 1
(1 2

Expression2 <
<< =
Func= A
<A B

ConvocacaoB L
,L M
boolN R
>R S
>S T
	predicateU ^
)^ _
;_ `
Task 
< 

Convocacao 
> 
GetOneAsync $
($ %

Expression% /
</ 0
Func0 4
<4 5

Convocacao5 ?
,? @
boolA E
>E F
>F G
	predicateH Q
)Q R
;R S
Task 
< 
string 
> !
GeneratePasswordAsync *
(* +
)+ ,
;, -
IEnumerable 
< 

Convocacao 
> #
MontarListaDeConvocados  7
(7 8
IEnumerable8 C
<C D

ConvocacaoD N
>N O
dadosConfirmadosP `
,` a
IEnumerableb m
<m n

Convocacaon x
>x y

convocados	z Ñ
)
Ñ Ö
;
Ö Ü
Task 
DetachLocal 
( 
Func 
< 

Convocacao (
,( )
bool* .
>. /
func0 4
)4 5
;5 6
} 
} ≠
íC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IConvocadoService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 
IConvocadoService		 &
:		' (
IDisposable		) 4
{

 
Task 
< 
	Convocado 
> 
AddAsync  
(  !
	Convocado! *
obj+ .
). /
;/ 0
Task 
< 
	Convocado 
> 
GetByIdAsync $
($ %
Guid% )
id* ,
), -
;- .
Task 
< 
IEnumerable 
< 
	Convocado "
>" #
># $
GetAllAsync% 0
(0 1
)1 2
;2 3
Task 
< 
	Convocado 
> 
UpdateAsync #
(# $
	Convocado$ -
obj. 1
)1 2
;2 3
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
	Convocado "
>" #
># $
SearchAsync% 0
(0 1

Expression1 ;
<; <
Func< @
<@ A
	ConvocadoA J
,J K
boolL P
>P Q
>Q R
	predicateS \
)\ ]
;] ^
Task 
< 
	Convocado 
> 
GetOneAsync #
(# $

Expression$ .
<. /
Func/ 3
<3 4
	Convocado4 =
,= >
bool? C
>C D
>D E
	predicateF O
)O P
;P Q
Task 
< 
bool 
> !
VerificaSeHaSobrenome (
(( )
string) /
nome0 4
)4 5
;5 6
} 
} ´
ñC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IDadosContratoService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{		 
public

 

	interface

  
IDadosContatoService

 )
:

* +
IDisposable

, 7
{ 

IQueryable 
< 
DadosContato 
>  
GetAll! '
(' (
)( )
;) *
Task 
Create 
( 
DadosContato  
entity! '
)' (
;( )
Task 
Update 
( 
int 
id 
, 
DadosContato (
entity) /
)/ 0
;0 1
Task 
Delete 
( 
int 
id 
) 
; 
IEnumerable 
< 
DadosContato  
>  !
Search" (
(( )

Expression) 3
<3 4
Func4 8
<8 9
DadosContato9 E
,E F
boolG K
>K L
>L M
	predicateN W
)W X
;X Y
DadosContato 
GetOne 
( 

Expression &
<& '
Func' +
<+ ,
DadosContato, 8
,8 9
bool: >
>> ?
>? @
	predicateA J
)J K
;K L
int 
SaveChanges 
( 
) 
; 
void 
Dispose 
( 
) 
; 
} 
} ‚
òC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IDadosConvocadosService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 #
IDadosConvocadosService		 ,
:		- .
IDisposable		/ :
{

 
Task 
< 
	Convocado 
> 
AddAsync  
(  !
	Convocado! *
obj+ .
). /
;/ 0
Task 
< 
	Convocado 
> 
GetByIdAsync $
($ %
Guid% )
id* ,
), -
;- .
Task 
< 
IEnumerable 
< 
	Convocado "
>" #
># $
GetAllAsync% 0
(0 1
)1 2
;2 3
Task 
< 
	Convocado 
> 
UpdateAsync #
(# $
	Convocado$ -
obj. 1
)1 2
;2 3
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
	Convocado "
>" #
># $
SearchAsync% 0
(0 1

Expression1 ;
<; <
Func< @
<@ A
	ConvocadoA J
,J K
boolL P
>P Q
>Q R
	predicateS \
)\ ]
;] ^
Task 
< 
	Convocado 
> 
GetOneAsync #
(# $

Expression$ .
<. /
Func/ 3
<3 4
	Convocado4 =
,= >
bool? C
>C D
>D E
	predicateF O
)O P
;P Q
Task 
SalvarCargosAsync 
( 
Guid #
id$ &
,& '
List( ,
<, -
Cargo- 2
>2 3

listaCargo4 >
)> ?
;? @
Task !
SalvarCandidatosAsync "
(" #
Guid# '
id( *
,* +
List, 0
<0 1
	Convocado1 :
>: ;
listaConvocados< K
)K L
;L M
} 
} ≥
ñC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IDadosPessoaisService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{		 
public

 

	interface

 !
IDadosPessoaisService

 *
:

+ ,
IDisposable

- 8
{ 

IQueryable 
< 
DadosPessoais  
>  !
GetAll" (
(( )
)) *
;* +
Task 
Create 
( 
DadosPessoais !
entity" (
)( )
;) *
Task 
Update 
( 
int 
id 
, 
DadosPessoais )
entity* 0
)0 1
;1 2
Task 
Delete 
( 
int 
id 
) 
; 
IEnumerable 
< 
DadosPessoais !
>! "
Search# )
() *

Expression* 4
<4 5
Func5 9
<9 :
DadosPessoais: G
,G H
boolI M
>M N
>N O
	predicateP Y
)Y Z
;Z [
DadosPessoais 
GetOne 
( 

Expression '
<' (
Func( ,
<, -
DadosPessoais- :
,: ;
bool< @
>@ A
>A B
	predicateC L
)L M
;M N
int 
SaveChanges 
( 
) 
; 
void 
Dispose 
( 
) 
; 
} 
} ˚
ïC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IDocumentacaoService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		  
IDocumentacaoService		 )
:		* +
IDisposable		, 7
{

 
Task 
< 
	Documento 
> 
AddAsync  
(  !
	Documento! *
obj+ .
). /
;/ 0
Task 
< 
	Documento 
> 
GetByIdAsync $
($ %
Guid% )
id* ,
), -
;- .
Task 
< 
IEnumerable 
< 
	Documento "
>" #
># $
GetAllAsync% 0
(0 1
)1 2
;2 3
Task 
< 
	Documento 
> 
UpdateAsync #
(# $
	Documento$ -
obj. 1
)1 2
;2 3
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
	Documento "
>" #
># $
SearchAsync% 0
(0 1

Expression1 ;
<; <
Func< @
<@ A
	DocumentoA J
,J K
boolL P
>P Q
>Q R
	predicateS \
)\ ]
;] ^
Task 
< 
	Documento 
> 
GetOneAsync #
(# $

Expression$ .
<. /
Func/ 3
<3 4
	Documento4 =
,= >
bool? C
>C D
>D E
	predicateF O
)O P
;P Q
} 
} ·
õC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IDocumentoCandidatoService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 &
IDocumentoCandidatoService		 /
:		0 1
IDisposable		2 =
{

 
Task 
< 
DocumentoCandidato 
>  
AddAsync! )
() *
DocumentoCandidato* <
obj= @
)@ A
;A B
Task 
< 
DocumentoCandidato 
>  
GetByIdAsync! -
(- .
Guid. 2
id3 5
)5 6
;6 7
Task 
< 
IEnumerable 
< 
DocumentoCandidato +
>+ ,
>, -
GetAllAsync. 9
(9 :
): ;
;; <
Task 
< 
DocumentoCandidato 
>  
UpdateAsync! ,
(, -
DocumentoCandidato- ?
obj@ C
)C D
;D E
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
DocumentoCandidato +
>+ ,
>, -
SearchAsync. 9
(9 :

Expression: D
<D E
FuncE I
<I J
DocumentoCandidatoJ \
,\ ]
bool^ b
>b c
>c d
	predicatee n
)n o
;o p
Task 
< 
DocumentoCandidato 
>  
GetOneAsync! ,
(, -

Expression- 7
<7 8
Func8 <
<< =
DocumentoCandidato= O
,O P
boolQ U
>U V
>V W
	predicateX a
)a b
;b c
} 
} ï
ìC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IDocumentosService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{		 
public

 

	interface

 
IDocumentosService

 '
{ 

IQueryable 
< 
	Documento 
> 
GetAll $
($ %
)% &
;& '
Task 
Create 
( 
	Documento 
entity $
)$ %
;% &
Task 
Update 
( 
int 
id 
, 
	Documento %
entity& ,
), -
;- .
Task 
Delete 
( 
int 
id 
) 
; 
IEnumerable 
< 
	Documento 
> 
Search %
(% &

Expression& 0
<0 1
Func1 5
<5 6
	Documento6 ?
,? @
boolA E
>E F
>F G
	predicateH Q
)Q R
;R S
	Documento 
GetOne 
( 

Expression #
<# $
Func$ (
<( )
	Documento) 2
,2 3
bool4 8
>8 9
>9 :
	predicate; D
)D E
;E F
int 
SaveChanges 
( 
) 
; 
} 
} Ω
ëC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IEnumDescription.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public 

	interface 
IEnumDescription %
{ 
string 
GetEnumDescription !
(! "
Enum" &
e' (
)( )
;) *
} 
}		 õ
çC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IListaOpcoes.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public 

	interface 
IListaOpcoes !
{ 
string 
EnumDescription 
( 
Enum #
e$ %
)% &
;& '

Dictionary		 
<		 
TEnum		 
,		 
string		  
>		  !
MontarListaOpcoes		" 3
<		3 4
TEnum		4 9
>		9 :
(		: ;
)		; <
;		< =
}

 
} ß
ìC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IMontaListaComEnum.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public 

	interface 
IMontaListaComEnum '
{ 

Dictionary 
< 
TEnum 
, 
string  
>  !
MontarListaOpoes" 2
<2 3
TEnum3 8
>8 9
(9 :
): ;
;; <
} 
}		 ◊
öC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IPasswordGeneratorService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public 

	interface %
IPasswordGeneratorService .
{		 
Task

 
<

 
string

 
>

 
GetPassword

  
(

  !
)

! "
;

" #
} 
} —
èC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IPessoaService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 
IPessoaService		 #
:		$ %
IDisposable		& 1
{

 
Task 
< 
Pessoa 
> 
AddAsync 
( 
Pessoa $
obj% (
)( )
;) *
Task 
< 
Pessoa 
> 
GetByIdAsync !
(! "
Guid" &
id' )
)) *
;* +
Task 
< 
IEnumerable 
< 
Pessoa 
>  
>  !
GetAllAsync" -
(- .
). /
;/ 0
Task 
< 
Pessoa 
> 
UpdateAsync  
(  !
Pessoa! '
obj( +
)+ ,
;, -
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
Pessoa 
>  
>  !
SearchAsync" -
(- .

Expression. 8
<8 9
Func9 =
<= >
Pessoa> D
,D E
boolF J
>J K
>K L
	predicateM V
)V W
;W X
Task 
< 
Pessoa 
> 
GetOneAsync  
(  !

Expression! +
<+ ,
Func, 0
<0 1
Pessoa1 7
,7 8
bool9 =
>= >
>> ?
	predicate@ I
)I J
;J K
} 
} ±
óC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IPrimeiroAcessoService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 "
IPrimeiroAcessoService		 +
:		, -
IDisposable		. 9
{

 
Task 
< 
PrimeiroAcesso 
> 
AddAsync %
(% &
PrimeiroAcesso& 4
obj5 8
)8 9
;9 :
Task 
< 
PrimeiroAcesso 
> 
GetByIdAsync )
() *
Guid* .
id/ 1
)1 2
;2 3
Task 
< 
IEnumerable 
< 
PrimeiroAcesso '
>' (
>( )
GetAllAsync* 5
(5 6
)6 7
;7 8
Task 
< 
PrimeiroAcesso 
> 
UpdateAsync (
(( )
PrimeiroAcesso) 7
obj8 ;
); <
;< =
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
PrimeiroAcesso '
>' (
>( )
SearchAsync* 5
(5 6

Expression6 @
<@ A
FuncA E
<E F
PrimeiroAcessoF T
,T U
boolV Z
>Z [
>[ \
	predicate] f
)f g
;g h
Task 
< 
PrimeiroAcesso 
> 
GetOneAsync (
(( )

Expression) 3
<3 4
Func4 8
<8 9
PrimeiroAcesso9 G
,G H
boolI M
>M N
>N O
	predicateP Y
)Y Z
;Z [
} 
} È
ëC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IProcessoService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 
IProcessoService		 %
:		& '
IDisposable		( 3
{

 
Task 
< 
Processo 
> 
AddAsync 
(  
Processo  (
obj) ,
), -
;- .
Task 
< 
Processo 
> 
GetByIdAsync #
(# $
Guid$ (
id) +
)+ ,
;, -
Task 
< 
IEnumerable 
< 
Processo !
>! "
>" #
GetAllAsync$ /
(/ 0
)0 1
;1 2
Task 
< 
Processo 
> 
UpdateAsync "
(" #
Processo# +
obj, /
)/ 0
;0 1
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
Processo !
>! "
>" #
SearchAsync$ /
(/ 0

Expression0 :
<: ;
Func; ?
<? @
Processo@ H
,H I
boolJ N
>N O
>O P
	predicateQ Z
)Z [
;[ \
Task 
< 
Processo 
> 
GetOneAsync "
(" #

Expression# -
<- .
Func. 2
<2 3
Processo3 ;
,; <
bool= A
>A B
>B C
	predicateD M
)M N
;N O
} 
} È
ëC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\ITelefoneService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 
ITelefoneService		 %
:		& '
IDisposable		( 3
{

 
Task 
< 
Telefone 
> 
AddAsync 
(  
Telefone  (
obj) ,
), -
;- .
Task 
< 
Telefone 
> 
GetByIdAsync #
(# $
Guid$ (
id) +
)+ ,
;, -
Task 
< 
IEnumerable 
< 
Telefone !
>! "
>" #
GetAllAsync$ /
(/ 0
)0 1
;1 2
Task 
< 
Telefone 
> 
UpdateAsync "
(" #
Telefone# +
obj, /
)/ 0
;0 1
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
Telefone !
>! "
>" #
SearchAsync$ /
(/ 0

Expression0 :
<: ;
Func; ?
<? @
Telefone@ H
,H I
boolJ N
>N O
>O P
	predicateQ Z
)Z [
;[ \
Task 
< 
Telefone 
> 
GetOneAsync "
(" #

Expression# -
<- .
Func. 2
<2 3
Telefone3 ;
,; <
bool= A
>A B
>B C
	predicateD M
)M N
;N O
} 
} •
ñC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\ITipoDocumentoService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 !
ITipoDocumentoService		 *
:		+ ,
IDisposable		- 8
{

 
Task 
< 
TipoDocumento 
> 
AddAsync $
($ %
TipoDocumento% 2
obj3 6
)6 7
;7 8
Task 
< 
TipoDocumento 
> 
GetByIdAsync (
(( )
Guid) -
id. 0
)0 1
;1 2
Task 
< 
IEnumerable 
< 
TipoDocumento &
>& '
>' (
GetAllAsync) 4
(4 5
)5 6
;6 7
Task 
< 
TipoDocumento 
> 
UpdateAsync '
(' (
TipoDocumento( 5
obj6 9
)9 :
;: ;
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
TipoDocumento &
>& '
>' (
SearchAsync) 4
(4 5

Expression5 ?
<? @
Func@ D
<D E
TipoDocumentoE R
,R S
boolT X
>X Y
>Y Z
	predicate[ d
)d e
;e f
Task 
< 
TipoDocumento 
> 
GetOneAsync '
(' (

Expression( 2
<2 3
Func3 7
<7 8
TipoDocumento8 E
,E F
boolG K
>K L
>L M
	predicateN W
)W X
;X Y
} 
} ›
êC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Interfaces\Services\IUsuarioService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &

Interfaces& 0
.0 1
Services1 9
{ 
public		 

	interface		 
IUsuarioService		 $
:		% &
IDisposable		' 2
{

 
Task 
< 
Usuario 
> 
AddAsync 
( 
Usuario &
obj' *
)* +
;+ ,
Task 
< 
Usuario 
> 
GetByIdAsync "
(" #
Guid# '
id( *
)* +
;+ ,
Task 
< 
IEnumerable 
< 
Usuario  
>  !
>! "
GetAllAsync# .
(. /
)/ 0
;0 1
Task 
< 
Usuario 
> 
UpdateAsync !
(! "
Usuario" )
obj* -
)- .
;. /
Task 
RemoveAsync 
( 
Guid 
id  
)  !
;! "
Task 
< 
IEnumerable 
< 
Usuario  
>  !
>! "
SearchAsync# .
(. /

Expression/ 9
<9 :
Func: >
<> ?
Usuario? F
,F G
boolH L
>L M
>M N
	predicateO X
)X Y
;Y Z
Task 
< 
Usuario 
> 
GetOneAsync !
(! "

Expression" ,
<, -
Func- 1
<1 2
Usuario2 9
,9 :
bool; ?
>? @
>@ A
	predicateB K
)K L
;L M
} 
} ®
ÉC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Models\ApplicationUser.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Models& ,
{ 
public 

class 
ApplicationUser  
:! "
IdentityUser# /
{ 
} 
} Û
ÇC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\AdminService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
AdminService 
: 
IAdminService  -
{ 
private 
readonly 
IAdminRepository )
_adminRepository* :
;: ;
public 
AdminService 
( 
IAdminRepository ,
adminRepository- <
)< =
{ 	
_adminRepository 
= 
adminRepository .
;. /
} 	
public 
void 
Dispose 
( 
) 
{ 	
_adminRepository 
. 
Dispose $
($ %
)% &
;& '
} 	
public 
async 
Task 
< 
Admin 
>  
AddAsync! )
() *
Admin* /
obj0 3
)3 4
{ 	
return 
await 
_adminRepository )
.) *
AddAsync* 2
(2 3
obj3 6
)6 7
;7 8
} 	
public 
async 
Task 
< 
Admin 
>  
GetByIdAsync! -
(- .
Guid. 2
id3 5
)5 6
{ 	
return   
await   
_adminRepository   )
.  ) *
GetByIdAsync  * 6
(  6 7
id  7 9
)  9 :
;  : ;
}!! 	
public## 
async## 
Task## 
<## 
IEnumerable## %
<##% &
Admin##& +
>##+ ,
>##, -
GetAllAsync##. 9
(##9 :
)##: ;
{$$ 	
return%% 
await%% 
_adminRepository%% )
.%%) *
GetAllAsync%%* 5
(%%5 6
)%%6 7
;%%7 8
}&& 	
public(( 
async(( 
Task(( 
<(( 
Admin(( 
>((  
UpdateAsync((! ,
(((, -
Admin((- 2
obj((3 6
)((6 7
{)) 	
return** 
await** 
_adminRepository** )
.**) *
UpdateAsync*** 5
(**5 6
obj**6 9
)**9 :
;**: ;
}++ 	
public-- 
async-- 
Task-- 
RemoveAsync-- %
(--% &
Guid--& *
id--+ -
)--- .
{.. 	
await// 
_adminRepository// "
.//" #
RemoveAsync//# .
(//. /
id/// 1
)//1 2
;//2 3
}00 	
public22 
async22 
Task22 
<22 
IEnumerable22 %
<22% &
Admin22& +
>22+ ,
>22, -
SearchAsync22. 9
(229 :

Expression22: D
<22D E
Func22E I
<22I J
Admin22J O
,22O P
bool22Q U
>22U V
>22V W
	predicate22X a
)22a b
{33 	
return44 
await44 
_adminRepository44 )
.44) *
SearchAsync44* 5
(445 6
	predicate446 ?
)44? @
;44@ A
}55 	
public77 
async77 
Task77 
<77 
Admin77 
>77  
GetOneAsync77! ,
(77, -

Expression77- 7
<777 8
Func778 <
<77< =
Admin77= B
,77B C
bool77D H
>77H I
>77I J
	predicate77K T
)77T U
{88 	
return99 
await99 
_adminRepository99 )
.99) *
GetOneAsync99* 5
(995 6
	predicate996 ?
)99? @
;99@ A
}:: 	
};; 
}<< Û
ÇC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\CargoService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
CargoService 
: 
ICargoService  -
{ 
private 
readonly 
ICargoRepository )
_cargoRepository* :
;: ;
public 
CargoService 
( 
ICargoRepository ,
cargoRepository- <
)< =
{ 	
_cargoRepository 
= 
cargoRepository .
;. /
} 	
public 
void 
Dispose 
( 
) 
{ 	
_cargoRepository 
. 
Dispose $
($ %
)% &
;& '
} 	
public 
async 
Task 
< 
Cargo 
>  
AddAsync! )
() *
Cargo* /
obj0 3
)3 4
{ 	
return 
await 
_cargoRepository )
.) *
AddAsync* 2
(2 3
obj3 6
)6 7
;7 8
} 	
public 
async 
Task 
< 
Cargo 
>  
GetByIdAsync! -
(- .
Guid. 2
id3 5
)5 6
{ 	
return   
await   
_cargoRepository   )
.  ) *
GetByIdAsync  * 6
(  6 7
id  7 9
)  9 :
;  : ;
}!! 	
public## 
async## 
Task## 
<## 
IEnumerable## %
<##% &
Cargo##& +
>##+ ,
>##, -
GetAllAsync##. 9
(##9 :
)##: ;
{$$ 	
return%% 
await%% 
_cargoRepository%% )
.%%) *
GetAllAsync%%* 5
(%%5 6
)%%6 7
;%%7 8
}&& 	
public(( 
async(( 
Task(( 
<(( 
Cargo(( 
>((  
UpdateAsync((! ,
(((, -
Cargo((- 2
obj((3 6
)((6 7
{)) 	
return** 
await** 
_cargoRepository** )
.**) *
UpdateAsync*** 5
(**5 6
obj**6 9
)**9 :
;**: ;
}++ 	
public-- 
async-- 
Task-- 
RemoveAsync-- %
(--% &
Guid--& *
id--+ -
)--- .
{.. 	
await// 
_cargoRepository// "
.//" #
RemoveAsync//# .
(//. /
id/// 1
)//1 2
;//2 3
}00 	
public22 
async22 
Task22 
<22 
IEnumerable22 %
<22% &
Cargo22& +
>22+ ,
>22, -
SearchAsync22. 9
(229 :

Expression22: D
<22D E
Func22E I
<22I J
Cargo22J O
,22O P
bool22Q U
>22U V
>22V W
	predicate22X a
)22a b
{33 	
return44 
await44 
_cargoRepository44 )
.44) *
SearchAsync44* 5
(445 6
	predicate446 ?
)44? @
;44@ A
}55 	
public77 
async77 
Task77 
<77 
Cargo77 
>77  
GetOneAsync77! ,
(77, -

Expression77- 7
<777 8
Func778 <
<77< =
Cargo77= B
,77B C
bool77D H
>77H I
>77I J
	predicate77K T
)77T U
{88 	
return99 
await99 
_cargoRepository99 )
.99) *
GetOneAsync99* 5
(995 6
	predicate996 ?
)99? @
;99@ A
}:: 	
};; 
}<< ß!
ÑC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\ClienteService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
ClienteService 
:  !
IClienteService" 1
{ 
private 
readonly 
IClienteRepository +
_clienteRepository, >
;> ?
public 
ClienteService 
( 
IClienteRepository 0
clienteRepository1 B
)B C
{ 	
_clienteRepository 
=  
clienteRepository! 2
;2 3
} 	
public 
void 
Dispose 
( 
) 
{ 	
_clienteRepository 
. 
Dispose &
(& '
)' (
;( )
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
public 
async 
Task 
< 
Cliente !
>! "
AddAsync# +
(+ ,
Cliente, 3
obj4 7
)7 8
{ 	
return 
await 
_clienteRepository +
.+ ,
AddAsync, 4
(4 5
obj5 8
)8 9
;9 :
} 	
public 
async 
Task 
< 
Cliente !
>! "
GetByIdAsync# /
(/ 0
Guid0 4
id5 7
)7 8
{   	
return!! 
await!! 
_clienteRepository!! +
.!!+ ,
GetByIdAsync!!, 8
(!!8 9
id!!9 ;
)!!; <
;!!< =
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
IEnumerable$$ %
<$$% &
Cliente$$& -
>$$- .
>$$. /
GetAllAsync$$0 ;
($$; <
)$$< =
{%% 	
return&& 
await&& 
_clienteRepository&& +
.&&+ ,
GetAllAsync&&, 7
(&&7 8
)&&8 9
;&&9 :
}'' 	
public)) 
async)) 
Task)) 
<)) 
Cliente)) !
>))! "
UpdateAsync))# .
()). /
Cliente))/ 6
obj))7 :
))): ;
{** 	
return++ 
await++ 
_clienteRepository++ +
.+++ ,
UpdateAsync++, 7
(++7 8
obj++8 ;
)++; <
;++< =
},, 	
public.. 
async.. 
Task.. 
RemoveAsync.. %
(..% &
Guid..& *
id..+ -
)..- .
{// 	
await00 
_clienteRepository00 $
.00$ %
RemoveAsync00% 0
(000 1
id001 3
)003 4
;004 5
}11 	
public33 
async33 
Task33 
<33 
IEnumerable33 %
<33% &
Cliente33& -
>33- .
>33. /
SearchAsync330 ;
(33; <

Expression33< F
<33F G
Func33G K
<33K L
Cliente33L S
,33S T
bool33U Y
>33Y Z
>33Z [
	predicate33\ e
)33e f
{44 	
return55 
await55 
_clienteRepository55 +
.55+ ,
SearchAsync55, 7
(557 8
	predicate558 A
)55A B
;55B C
}66 	
public88 
async88 
Task88 
<88 
Cliente88 !
>88! "
GetOneAsync88# .
(88. /

Expression88/ 9
<889 :
Func88: >
<88> ?
Cliente88? F
,88F G
bool88H L
>88L M
>88M N
	predicate88O X
)88X Y
{99 	
return:: 
await:: 
_clienteRepository:: +
.::+ ,
GetOneAsync::, 7
(::7 8
	predicate::8 A
)::A B
;::B C
};; 	
}<< 
}== Õ-
áC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\ConvocacaoService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
ConvocacaoService "
:# $
IConvocacaoService% 7
{ 
private 
readonly !
IConvocacaoRepository .!
_convocacaoRepository/ D
;D E
private 
readonly %
IPasswordGeneratorService 2
_passwordGenerator3 E
;E F
public 
ConvocacaoService  
(  !!
IConvocacaoRepository! 6 
convocacaoRepository7 K
,K L%
IPasswordGeneratorServiceM f
passwordGeneratorg x
)x y
{ 	!
_convocacaoRepository !
=" # 
convocacaoRepository$ 8
;8 9
_passwordGenerator 
=  
passwordGenerator! 2
;2 3
} 	
public 
void 
Dispose 
( 
) 
{ 	!
_convocacaoRepository !
.! "
Dispose" )
() *
)* +
;+ ,
} 	
public 
async 
Task 
< 

Convocacao $
>$ %
AddAsync& .
(. /

Convocacao/ 9
obj: =
)= >
{ 	
return 
await !
_convocacaoRepository .
.. /
AddAsync/ 7
(7 8
obj8 ;
); <
;< =
} 	
public   
async   
Task   
<   

Convocacao   $
>  $ %
GetByIdAsync  & 2
(  2 3
Guid  3 7
id  8 :
)  : ;
{!! 	
return"" 
await"" !
_convocacaoRepository"" .
."". /
GetByIdAsync""/ ;
(""; <
id""< >
)""> ?
;""? @
}## 	
public%% 
async%% 
Task%% 
<%% 
IEnumerable%% %
<%%% &

Convocacao%%& 0
>%%0 1
>%%1 2
GetAllAsync%%3 >
(%%> ?
)%%? @
{&& 	
return'' 
await'' !
_convocacaoRepository'' .
.''. /
GetAllAsync''/ :
('': ;
)''; <
;''< =
}(( 	
public** 
async** 
Task** 
<** 

Convocacao** $
>**$ %
UpdateAsync**& 1
(**1 2

Convocacao**2 <
obj**= @
)**@ A
{++ 	
return,, 
await,, !
_convocacaoRepository,, .
.,,. /
UpdateAsync,,/ :
(,,: ;
obj,,; >
),,> ?
;,,? @
}-- 	
public// 
async// 
Task// 
RemoveAsync// %
(//% &
Guid//& *
id//+ -
)//- .
{00 	
await11 !
_convocacaoRepository11 '
.11' (
RemoveAsync11( 3
(113 4
id114 6
)116 7
;117 8
}22 	
public44 
async44 
Task44 
<44 
IEnumerable44 %
<44% &

Convocacao44& 0
>440 1
>441 2
SearchAsync443 >
(44> ?

Expression44? I
<44I J
Func44J N
<44N O

Convocacao44O Y
,44Y Z
bool44[ _
>44_ `
>44` a
	predicate44b k
)44k l
{55 	
return66 
await66 !
_convocacaoRepository66 .
.66. /
SearchAsync66/ :
(66: ;
	predicate66; D
)66D E
;66E F
}77 	
public99 
async99 
Task99 
<99 
string99  
>99  !!
GeneratePasswordAsync99" 7
(997 8
)998 9
{:: 	
return;; 
await;; 
_passwordGenerator;; +
.;;+ ,
GetPassword;;, 7
(;;7 8
);;8 9
;;;9 :
}<< 	
public>> 
async>> 
Task>> 
<>> 

Convocacao>> $
>>>$ %
GetOneAsync>>& 1
(>>1 2

Expression>>2 <
<>>< =
Func>>= A
<>>A B

Convocacao>>B L
,>>L M
bool>>N R
>>>R S
>>>S T
	predicate>>U ^
)>>^ _
{?? 	
return@@ 
await@@ !
_convocacaoRepository@@ .
.@@. /
GetOneAsync@@/ :
(@@: ;
	predicate@@; D
)@@D E
;@@E F
}AA 	
publicCC 
IEnumerableCC 
<CC 

ConvocacaoCC %
>CC% &#
MontarListaDeConvocadosCC' >
(CC> ?
IEnumerableCC? J
<CCJ K

ConvocacaoCCK U
>CCU V
dadosConfirmadosCCW g
,CCg h
IEnumerableCCi t
<CCt u

ConvocacaoCCu 
>	CC Ä

convocados
CCÅ ã
)
CCã å
{DD 	
throwEE 
newEE #
NotImplementedExceptionEE -
(EE- .
)EE. /
;EE/ 0
}FF 	
publicHH 
asyncHH 
TaskHH 
DetachLocalHH %
(HH% &
FuncHH& *
<HH* +

ConvocacaoHH+ 5
,HH5 6
boolHH7 ;
>HH; <
funcHH= A
)HHA B
{II 	!
_convocacaoRepositoryJJ !
.JJ! "
DetachLocalJJ" -
(JJ- .
funcJJ. 2
)JJ2 3
;JJ3 4
}KK 	
}LL 
}MM ‹$
ÜC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\ConvocadoService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
ConvocadoService !
:" #
IConvocadoService$ 5
{ 
private 
readonly  
IConvocadoRepository - 
_convocadoRepository. B
;B C
public 
ConvocadoService 
(   
IConvocadoRepository  4
convocadoRepository5 H
)H I
{ 	 
_convocadoRepository  
=! "
convocadoRepository# 6
;6 7
} 	
public 
void 
Dispose 
( 
) 
{ 	 
_convocadoRepository  
.  !
Dispose! (
(( )
)) *
;* +
} 	
public 
async 
Task 
< 
	Convocado #
># $
AddAsync% -
(- .
	Convocado. 7
obj8 ;
); <
{ 	
return 
await  
_convocadoRepository -
.- .
AddAsync. 6
(6 7
obj7 :
): ;
;; <
} 	
public 
async 
Task 
< 
	Convocado #
># $
GetByIdAsync% 1
(1 2
Guid2 6
id7 9
)9 :
{   	
return!! 
await!!  
_convocadoRepository!! -
.!!- .
GetByIdAsync!!. :
(!!: ;
id!!; =
)!!= >
;!!> ?
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
IEnumerable$$ %
<$$% &
	Convocado$$& /
>$$/ 0
>$$0 1
GetAllAsync$$2 =
($$= >
)$$> ?
{%% 	
return&& 
await&&  
_convocadoRepository&& -
.&&- .
GetAllAsync&&. 9
(&&9 :
)&&: ;
;&&; <
}'' 	
public)) 
async)) 
Task)) 
<)) 
	Convocado)) #
>))# $
UpdateAsync))% 0
())0 1
	Convocado))1 :
obj)); >
)))> ?
{** 	
return++ 
await++  
_convocadoRepository++ -
.++- .
UpdateAsync++. 9
(++9 :
obj++: =
)++= >
;++> ?
},, 	
public.. 
async.. 
Task.. 
RemoveAsync.. %
(..% &
Guid..& *
id..+ -
)..- .
{// 	
await00  
_convocadoRepository00 &
.00& '
RemoveAsync00' 2
(002 3
id003 5
)005 6
;006 7
}11 	
public33 
async33 
Task33 
<33 
IEnumerable33 %
<33% &
	Convocado33& /
>33/ 0
>330 1
SearchAsync332 =
(33= >

Expression33> H
<33H I
Func33I M
<33M N
	Convocado33N W
,33W X
bool33Y ]
>33] ^
>33^ _
	predicate33` i
)33i j
{44 	
return55 
await55  
_convocadoRepository55 -
.55- .
SearchAsync55. 9
(559 :
	predicate55: C
)55C D
;55D E
}66 	
public88 
async88 
Task88 
<88 
bool88 
>88 !
VerificaSeHaSobrenome88  5
(885 6
string886 <
nome88= A
)88A B
{99 	
return:: 
nome:: 
.:: 
Trim:: 
(:: 
):: 
.:: 
Split:: $
(::$ %
$char::% (
)::( )
.::) *
Length::* 0
>::1 2
$num::3 4
;::4 5
};; 	
public== 
async== 
Task== 
<== 
	Convocado== #
>==# $
GetOneAsync==% 0
(==0 1

Expression==1 ;
<==; <
Func==< @
<==@ A
	Convocado==A J
,==J K
bool==L P
>==P Q
>==Q R
	predicate==S \
)==\ ]
{>> 	
return?? 
await??  
_convocadoRepository?? -
.??- .
GetOneAsync??. 9
(??9 :
	predicate??: C
)??C D
;??D E
}@@ 	
}AA 
}BB ∂X
åC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\DadosConvocadosService.cs
	namespace

 	 
SistemaDeConvocacoes


 
.

 
Domain

 %
.

% &
Services

& .
{ 
public 

class "
DadosConvocadosService '
:( )#
IDadosConvocadosService* A
{ 
private 
readonly 
ICargoRepository )
_cargoRepository* :
;: ;
private 
readonly &
IDadosConvocadosRepository 3&
_dadosConvocadosRepository4 N
;N O
public "
DadosConvocadosService %
(% &&
IDadosConvocadosRepository& @%
dadosConvocadosRepositoryA Z
,Z [
ICargoRepository 
cargoRepository ,
), -
{ 	&
_dadosConvocadosRepository &
=' (%
dadosConvocadosRepository) B
;B C
_cargoRepository 
= 
cargoRepository .
;. /
} 	
public 
async 
Task 
< 
	Convocado #
># $
AddAsync% -
(- .
	Convocado. 7
obj8 ;
); <
{ 	
return 
await &
_dadosConvocadosRepository 4
.4 5
AddAsync5 =
(= >
obj> A
)A B
;B C
} 	
public 
async 
Task 
< 
	Convocado #
># $
GetByIdAsync% 1
(1 2
Guid2 6
id7 9
)9 :
{ 	
return   
await   &
_dadosConvocadosRepository   3
.  3 4
GetByIdAsync  4 @
(  @ A
id  A C
)  C D
;  D E
}!! 	
public## 
async## 
Task## 
<## 
IEnumerable## %
<##% &
	Convocado##& /
>##/ 0
>##0 1
GetAllAsync##2 =
(##= >
)##> ?
{$$ 	
return%% 
await%% &
_dadosConvocadosRepository%% 3
.%%3 4
GetAllAsync%%4 ?
(%%? @
)%%@ A
;%%A B
}&& 	
public(( 
async(( 
Task(( 
<(( 
	Convocado(( #
>((# $
UpdateAsync((% 0
(((0 1
	Convocado((1 :
obj((; >
)((> ?
{)) 	
return** 
await** &
_dadosConvocadosRepository** 3
.**3 4
UpdateAsync**4 ?
(**? @
obj**@ C
)**C D
;**D E
}++ 	
public-- 
async-- 
Task-- 
RemoveAsync-- %
(--% &
Guid--& *
id--+ -
)--- .
{.. 	
await// &
_dadosConvocadosRepository// ,
.//, -
RemoveAsync//- 8
(//8 9
id//9 ;
)//; <
;//< =
}00 	
public22 
async22 
Task22 
<22 
IEnumerable22 %
<22% &
	Convocado22& /
>22/ 0
>220 1
SearchAsync222 =
(22= >

Expression22> H
<22H I
Func22I M
<22M N
	Convocado22N W
,22W X
bool22Y ]
>22] ^
>22^ _
	predicate22` i
)22i j
{33 	
return44 
await44 &
_dadosConvocadosRepository44 3
.443 4
SearchAsync444 ?
(44? @
	predicate44@ I
)44I J
;44J K
}55 	
public77 
async77 
Task77 !
SalvarCandidatosAsync77 /
(77/ 0
Guid770 4
id775 7
,777 8
List779 =
<77= >
	Convocado77> G
>77G H
listaCandidatos77I X
)77X Y
{88 	
foreach99 
(99 
var99 
dados99 
in99 !
listaCandidatos99" 1
)991 2
{:: 

FormataCpf;; 
(;; 
dados;;  
);;  !
;;;! "
FormataCelular== 
(== 
dados== $
)==$ %
;==% &
FormataTelefone?? 
(??  
dados??  %
)??% &
;??& '
try@@ 
{AA 
varBB 
dadosConvocadoBB &
=BB' (
awaitBB) .&
_dadosConvocadosRepositoryBB/ I
.BBI J
SearchAsyncBBJ U
(BBU V
aBBV W
=>BBX Z
aCC 
.CC 
NomeCC 
.CC 
EqualsCC %
(CC% &
dadosCC& +
.CC+ ,
NomeCC, 0
)CC0 1
&&CC2 4
aCC5 6
.CC6 7
	InscricaoCC7 @
.CC@ A
EqualsCCA G
(CCG H
dadosCCH M
.CCM N
	InscricaoCCN W
)CCW X
&&CCY [
aCC\ ]
.CC] ^
CpfCC^ a
.CCa b
EqualsCCb h
(CCh i
dadosCCi n
.CCn o
CpfCCo r
)CCr s
)CCs t
;CCt u
ifEE 
(EE 
!EE 
dadosConvocadoEE '
.EE' (
AnyEE( +
(EE+ ,
)EE, -
)EE- .
awaitFF 
AddAsyncFF &
(FF& '
dadosFF' ,
)FF, -
;FF- .
}GG 
catchHH 
(HH 
	ExceptionHH  
eHH! "
)HH" #
{II 
ConsoleJJ 
.JJ 
	WriteLineJJ %
(JJ% &
eJJ& '
)JJ' (
;JJ( )
throwKK 
;KK 
}LL 
}MM 
}NN 	
publicPP 
asyncPP 
TaskPP 
SalvarCargosAsyncPP +
(PP+ ,
GuidPP, 0
idPP1 3
,PP3 4
ListPP5 9
<PP9 :
CargoPP: ?
>PP? @
listaCargosPPA L
)PPL M
{QQ 	
foreachRR 
(RR 
varRR 
itensRR 
inRR !
listaCargosRR" -
)RR- .
{SS 
varTT 
	itemcargoTT 
=TT 
itensTT  %
.TT% &
NomeTT& *
.TT* +
SplitTT+ 0
(TT0 1
$charTT1 4
)TT4 5
;TT5 6
varUU 
codigoUU 
=UU 
	itemcargoUU &
[UU& '
$numUU' (
]UU( )
.UU) *
TrimUU* .
(UU. /
)UU/ 0
;UU0 1
varVV 
nomeVV 
=VV 
	itemcargoVV $
[VV$ %
$numVV% &
]VV& '
.VV' (
TrimVV( ,
(VV, -
)VV- .
;VV. /
varXX 

dadosCargoXX 
=XX  
awaitXX! &
_cargoRepositoryXX' 7
.XX7 8
SearchAsyncXX8 C
(XXC D
aXXD E
=>XXF H
aYY 
.YY 

ProcessoIdYY  
.YY  !
EqualsYY! '
(YY' (
idYY( *
)YY* +
&&YY, .
aYY/ 0
.YY0 1
CodigoCargoYY1 <
.YY< =
EqualsYY= C
(YYC D
codigoYYD J
)YYJ K
&&YYL N
aYYO P
.YYP Q
NomeYYQ U
.YYU V
EqualsYYV \
(YY\ ]
nomeYY] a
)YYa b
)YYb c
;YYc d
if[[ 
([[ 
![[ 

dadosCargo[[ 
.[[  
Any[[  #
([[# $
)[[$ %
)[[% &
{\\ 
var]] 
cargo]] 
=]] 
new]]  #
Cargo]]$ )
{^^ 
Ativo__ 
=__ 
true__  $
,__$ %
CargoId`` 
=``  !
Guid``" &
.``& '
NewGuid``' .
(``. /
)``/ 0
,``0 1
CodigoCargoaa #
=aa$ %
codigoaa& ,
,aa, -
Nomebb 
=bb 
nomebb #
,bb# $

ProcessoIdcc "
=cc# $
idcc% '
}dd 
;dd 
awaitee 
_cargoRepositoryee *
.ee* +
AddAsyncee+ 3
(ee3 4
cargoee4 9
)ee9 :
;ee: ;
}ff 
}ii 
}jj 	
publicll 
voidll 
Disposell 
(ll 
)ll 
{mm 	&
_dadosConvocadosRepositorynn &
.nn& '
Disposenn' .
(nn. /
)nn/ 0
;nn0 1
}oo 	
publicqq 
asyncqq 
Taskqq 
<qq 
	Convocadoqq #
>qq# $
GetOneAsyncqq% 0
(qq0 1

Expressionqq1 ;
<qq; <
Funcqq< @
<qq@ A
	ConvocadoqqA J
,qqJ K
boolqqL P
>qqP Q
>qqQ R
	predicateqqS \
)qq\ ]
{rr 	
returnss 
awaitss &
_dadosConvocadosRepositoryss 3
.ss3 4
GetOneAsyncss4 ?
(ss? @
	predicatess@ I
)ssI J
;ssJ K
}tt 	
privatevv 
staticvv 
voidvv 
FormataTelefonevv +
(vv+ ,
	Convocadovv, 5
dadosvv6 ;
)vv; <
{ww 	
dadosxx 
.xx 
Telefonexx 
=xx 
dadosxx "
.xx" #
Telefonexx# +
.xx+ ,
Replacexx, 3
(xx3 4
$strxx4 7
,xx7 8
$strxx9 ;
)xx; <
;xx< =
dadosyy 
.yy 
Telefoneyy 
=yy 
dadosyy "
.yy" #
Telefoneyy# +
.yy+ ,
Replaceyy, 3
(yy3 4
$stryy4 7
,yy7 8
$stryy9 ;
)yy; <
;yy< =
}zz 	
private|| 
static|| 
void|| 
FormataCelular|| *
(||* +
	Convocado||+ 4
dados||5 :
)||: ;
{}} 	
dados~~ 
.~~ 
Celular~~ 
=~~ 
dados~~ !
.~~! "
Celular~~" )
.~~) *
Replace~~* 1
(~~1 2
$str~~2 5
,~~5 6
$str~~7 9
)~~9 :
;~~: ;
dados 
. 
Celular 
= 
dados !
.! "
Celular" )
.) *
Replace* 1
(1 2
$str2 5
,5 6
$str7 9
)9 :
;: ;
}
ÄÄ 	
private
ÇÇ 
static
ÇÇ 
void
ÇÇ 

FormataCpf
ÇÇ &
(
ÇÇ& '
	Convocado
ÇÇ' 0
dados
ÇÇ1 6
)
ÇÇ6 7
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
dados
ÑÑ 
.
ÑÑ 
Cpf
ÑÑ 
.
ÑÑ 
Length
ÑÑ  
<
ÑÑ! "
$num
ÑÑ# %
)
ÑÑ% &
dados
ÖÖ 
.
ÖÖ 
Cpf
ÖÖ 
=
ÖÖ 
dados
ÖÖ !
.
ÖÖ! "
Cpf
ÖÖ" %
.
ÖÖ% &
PadLeft
ÖÖ& -
(
ÖÖ- .
$num
ÖÖ. 0
,
ÖÖ0 1
$char
ÖÖ2 5
)
ÖÖ5 6
;
ÖÖ6 7
}
ÜÜ 	
}
ââ 
}ää ô!
âC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\DocumentacaoService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
DocumentacaoService $
:% & 
IDocumentacaoService' ;
{ 
private 
readonly #
IDocumentacaoRepository 0#
_documentacaoRepository1 H
;H I
public 
DocumentacaoService "
(" ##
IDocumentacaoRepository# :"
documentacaoRepository; Q
)Q R
{ 	#
_documentacaoRepository #
=$ %"
documentacaoRepository& <
;< =
} 	
public 
void 
Dispose 
( 
) 
{ 	#
_documentacaoRepository #
.# $
Dispose$ +
(+ ,
), -
;- .
} 	
public 
async 
Task 
< 
	Documento #
># $
AddAsync% -
(- .
	Documento. 7
obj8 ;
); <
{ 	
return 
await #
_documentacaoRepository 0
.0 1
AddAsync1 9
(9 :
obj: =
)= >
;> ?
} 	
public 
async 
Task 
< 
	Documento #
># $
GetByIdAsync% 1
(1 2
Guid2 6
id7 9
)9 :
{ 	
return   
await   #
_documentacaoRepository   0
.  0 1
GetByIdAsync  1 =
(  = >
id  > @
)  @ A
;  A B
}!! 	
public## 
async## 
Task## 
<## 
IEnumerable## %
<##% &
	Documento##& /
>##/ 0
>##0 1
GetAllAsync##2 =
(##= >
)##> ?
{$$ 	
return%% 
await%% #
_documentacaoRepository%% 0
.%%0 1
GetAllAsync%%1 <
(%%< =
)%%= >
;%%> ?
}&& 	
public(( 
async(( 
Task(( 
<(( 
	Documento(( #
>((# $
UpdateAsync((% 0
(((0 1
	Documento((1 :
obj((; >
)((> ?
{)) 	
return** 
await** #
_documentacaoRepository** 0
.**0 1
UpdateAsync**1 <
(**< =
obj**= @
)**@ A
;**A B
}++ 	
public-- 
async-- 
Task-- 
RemoveAsync-- %
(--% &
Guid--& *
id--+ -
)--- .
{.. 	
await// #
_documentacaoRepository// )
.//) *
RemoveAsync//* 5
(//5 6
id//6 8
)//8 9
;//9 :
}00 	
public22 
async22 
Task22 
<22 
IEnumerable22 %
<22% &
	Documento22& /
>22/ 0
>220 1
SearchAsync222 =
(22= >

Expression22> H
<22H I
Func22I M
<22M N
	Documento22N W
,22W X
bool22Y ]
>22] ^
>22^ _
	predicate22` i
)22i j
{33 	
return44 
await44 #
_documentacaoRepository44 0
.440 1
SearchAsync441 <
(44< =
	predicate44= F
)44F G
;44G H
}55 	
public77 
async77 
Task77 
<77 
	Documento77 #
>77# $
GetOneAsync77% 0
(770 1

Expression771 ;
<77; <
Func77< @
<77@ A
	Documento77A J
,77J K
bool77L P
>77P Q
>77Q R
	predicate77S \
)77\ ]
{88 	
return99 
await99 #
_documentacaoRepository99 0
.990 1
GetOneAsync991 <
(99< =
	predicate99= F
)99F G
;99G H
}:: 	
};; 
}<< ﬂ"
èC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\DocumentoCandidatoService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class %
DocumentoCandidatoService *
:+ ,&
IDocumentoCandidatoService- G
{ 
private 
readonly )
IDocumentoCandidatoRepository 6)
_documentoCandidatoRepository7 T
;T U
public %
DocumentoCandidatoService (
(( ))
IDocumentoCandidatoRepository) F(
documentoCandidatoRepositoryG c
)c d
{ 	)
_documentoCandidatoRepository )
=* +(
documentoCandidatoRepository, H
;H I
} 	
public 
void 
Dispose 
( 
) 
{ 	)
_documentoCandidatoRepository )
.) *
Dispose* 1
(1 2
)2 3
;3 4
} 	
public 
async 
Task 
< 
DocumentoCandidato ,
>, -
AddAsync. 6
(6 7
DocumentoCandidato7 I
objJ M
)M N
{ 	
return 
await )
_documentoCandidatoRepository 6
.6 7
AddAsync7 ?
(? @
obj@ C
)C D
;D E
} 	
public 
async 
Task 
< 
DocumentoCandidato ,
>, -
GetByIdAsync. :
(: ;
Guid; ?
id@ B
)B C
{ 	
return   
await   )
_documentoCandidatoRepository   6
.  6 7
GetByIdAsync  7 C
(  C D
id  D F
)  F G
;  G H
}!! 	
public## 
async## 
Task## 
<## 
IEnumerable## %
<##% &
DocumentoCandidato##& 8
>##8 9
>##9 :
GetAllAsync##; F
(##F G
)##G H
{$$ 	
return%% 
await%% )
_documentoCandidatoRepository%% 6
.%%6 7
GetAllAsync%%7 B
(%%B C
)%%C D
;%%D E
}&& 	
public(( 
async(( 
Task(( 
<(( 
DocumentoCandidato(( ,
>((, -
UpdateAsync((. 9
(((9 :
DocumentoCandidato((: L
obj((M P
)((P Q
{)) 	
return** 
await** )
_documentoCandidatoRepository** 6
.**6 7
UpdateAsync**7 B
(**B C
obj**C F
)**F G
;**G H
}++ 	
public-- 
async-- 
Task-- 
RemoveAsync-- %
(--% &
Guid--& *
id--+ -
)--- .
{.. 	
await// )
_documentoCandidatoRepository// /
./// 0
RemoveAsync//0 ;
(//; <
id//< >
)//> ?
;//? @
}00 	
public22 
async22 
Task22 
<22 
IEnumerable22 %
<22% &
DocumentoCandidato22& 8
>228 9
>229 :
SearchAsync22; F
(22F G

Expression22G Q
<22Q R
Func22R V
<22V W
DocumentoCandidato22W i
,22i j
bool22k o
>22o p
>22p q
	predicate22r {
)22{ |
{33 	
return44 
await44 )
_documentoCandidatoRepository44 6
.446 7
SearchAsync447 B
(44B C
	predicate44C L
)44L M
;44M N
}55 	
public77 
async77 
Task77 
<77 
DocumentoCandidato77 ,
>77, -
GetOneAsync77. 9
(779 :

Expression77: D
<77D E
Func77E I
<77I J
DocumentoCandidato77J \
,77\ ]
bool77^ b
>77b c
>77c d
	predicate77e n
)77n o
{88 	
return99 
await99 )
_documentoCandidatoRepository99 6
.996 7
GetOneAsync997 B
(99B C
	predicate99C L
)99L M
;99M N
}:: 	
};; 
}<< È
ÖC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\EnumDescription.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Services& .
{ 
public 

class 
EnumDescription  
:! "
IEnumDescription# 3
{ 
public		 
string		 
GetEnumDescription		 (
(		( )
Enum		) -
e		. /
)		/ 0
{

 	
var 
t 
= 
e 
. 
GetType 
( 
) 
;   
DescriptionAttribute  
[  !
]! "
att# &
=' (
{) *
}+ ,
;, -
if 
( 
! 
Enum 
. 
	IsDefined 
(  
t  !
,! "
e# $
)$ %
)% &
return' -
att. 1
.1 2
Length2 8
>9 :
$num; <
?= >
att? B
[B C
$numC D
]D E
.E F
DescriptionF Q
??R T
$strU [
:\ ]
e^ _
._ `
ToString` h
(h i
)i j
;j k
var 
	fieldInfo 
= 
t 
. 
GetField &
(& '
e' (
.( )
ToString) 1
(1 2
)2 3
)3 4
;4 5
att 
= 
(  
DescriptionAttribute '
[' (
]( )
)) *
	fieldInfo* 3
.3 4
GetCustomAttributes4 G
(G H
typeofH N
(N O 
DescriptionAttributeO c
)c d
,d e
falsef k
)k l
;l m
return 
att 
. 
Length 
> 
$num  !
?" #
att$ '
[' (
$num( )
]) *
.* +
Description+ 6
??7 9
$str: @
:A B
eC D
.D E
ToStringE M
(M N
)N O
;O P
} 	
} 
} …
ÇC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\ListasOpcoes.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Services& .
{ 
public 

class 
ListasOpcoes 
: 
IListaOpcoes  ,
{ 
private		 
readonly		 
IEnumDescription		 )
_enumDescription		* :
;		: ;
private

 
readonly

 
IMontaListaComEnum

 +
_montaListaComEnum

, >
;

> ?
public 
ListasOpcoes 
( 
IEnumDescription ,
enumDescription- <
,< =
IMontaListaComEnum> P
montaListaComEnumQ b
)b c
{ 	
_enumDescription 
= 
enumDescription .
;. /
_montaListaComEnum 
=  
montaListaComEnum! 2
;2 3
} 	
public 
string 
EnumDescription %
(% &
Enum& *
e+ ,
), -
{ 	
return 
_enumDescription #
.# $
GetEnumDescription$ 6
(6 7
e7 8
)8 9
;9 :
} 	
public 

Dictionary 
< 
TEnum 
,  
string! '
>' (
MontarListaOpcoes) :
<: ;
TEnum; @
>@ A
(A B
)B C
{ 	
return 
_montaListaComEnum %
.% &
MontarListaOpoes& 6
<6 7
TEnum7 <
>< =
(= >
)> ?
;? @
} 	
} 
} —+
áC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\MontaListaComEnum.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Services& .
{ 
public 

class 
MontaListaComEnum "
:# $
IMontaListaComEnum% 7
{		 
private

 
readonly

 
IEnumDescription

 )
_enumDescription

* :
;

: ;
public 
MontaListaComEnum  
(  !
IEnumDescription! 1
enumDescription2 A
)A B
{ 	
_enumDescription 
= 
enumDescription .
;. /
} 	
public 

Dictionary	 
< 
Estados 
, 
string #
># $
MontarListaEstado% 6
(6 7
)7 8
{ 
var 
estados 
= 
new 

Dictionary 
<  
Estados  '
,' (
string) /
>/ 0
(0 1
)1 2
;2 3
foreach 

( 
Estados 
val 
in 
Enum 
.  
	GetValues  )
() *
typeof* 0
(0 1
Estados1 8
)8 9
)9 :
): ;
estados 
. 
Add 
( 
val 
, 
_enumDescription %
.% &
GetEnumDescription& 8
(8 9
val9 <
)< =
)= >
;> ?
return 	
estados
 
; 
} 
public 

Dictionary 
< 
EstadoCivil "
," #
string$ *
>* +"
MontarListaEstadoCivil, B
(B C
)C D
{ 
throw 
new #
NotImplementedException '
(' (
)( )
;) *
} 
public 

Dictionary 
< 
TEnum 
, 
string $
>$ %
MontarListaOpoes& 6
<6 7
TEnum7 <
>< =
(= >
)> ?
{   
var!! 
opcoes!! 
=!! 
new!! 

Dictionary!! 
<!! 
TEnum!! $
,!!$ %
string!!& ,
>!!, -
(!!- .
)!!. /
;!!/ 0
foreach## 
(## 
TEnum## 
val## 
in## 
Enum##  
.##  !
	GetValues##! *
(##* +
typeof##+ 1
(##1 2
TEnum##2 7
)##7 8
)##8 9
)##9 :
opcoes$$ 
.$$ 
Add$$ 
($$ 
val$$ 
,$$ 
_enumDescription$$ '
.$$' (
GetEnumDescription$$( :
($$: ;
($$; <
Enum$$< @
)$$@ A
($$A B
object$$B H
)$$H I
($$I J
($$J K
TEnum$$K P
)$$P Q
val$$Q T
)$$T U
)$$U V
)$$V W
;$$W X
return%% 
opcoes%% 
;%% 
}&& 
public(( 

Dictionary(( 
<(( 
StatusConvocacao(( '
,((' (
string(() /
>((/ 0+
MontarListaOpcoesComparecimento((1 P
(((P Q
)((Q R
{)) 
var** 

opcoesComp** 
=** 
new** 

Dictionary** "
<**" #
StatusConvocacao**# 3
,**3 4
string**5 ;
>**; <
(**< =
)**= >
;**> ?
foreach,, 

(,, 
StatusConvocacao,, 
val,,  
in,,! #
Enum,,$ (
.,,( )
	GetValues,,) 2
(,,2 3
typeof,,3 9
(,,9 :
StatusConvocacao,,: J
),,J K
),,K L
),,L M

opcoesComp-- 
.-- 
Add-- 
(-- 
val-- 
,-- 
_enumDescription-- (
.--( )
GetEnumDescription--) ;
(--; <
val--< ?
)--? @
)--@ A
;--A B
return.. 	

opcoesComp..
 
;.. 
}// 
public11 

Dictionary11	 
<11 
StatusConvocacao11 $
,11$ %
string11& ,
>11, -(
MontarListaOpcoesContratacao11. J
(11J K
)11K L
{22 
var33 
opcoesContratacao33 
=33 
new33 

Dictionary33 )
<33) *
StatusConvocacao33* :
,33: ;
string33< B
>33B C
(33C D
)33D E
;33E F
foreach55 

(55 
StatusConvocacao55 
val55  
in55! #
Enum55$ (
.55( )
	GetValues55) 2
(552 3
typeof553 9
(559 :
StatusConvocacao55: J
)55J K
)55K L
)55L M
opcoesContratacao66 
.66 
Add66 
(66 
val66 
,66 
_enumDescription66 /
.66/ 0
GetEnumDescription660 B
(66B C
val66C F
)66F G
)66G H
;66H I
return77 	
opcoesContratacao77
 
;77 
}88 
}99 
}:: à
éC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\PasswordGeneratorService.cs
	namespace 	 
SistemaDeConvocacoes
 
. 
Domain %
.% &
Services& .
{ 
public 

class $
PasswordGeneratorService )
:* +%
IPasswordGeneratorService, E
{		 
private

 
const

 
string

 
ValidCharacters

 ,
=

- .
$str

/ Y
;

Y Z
public 
async 
Task 
< 
string  
>  !
GetPassword" -
(- .
). /
{ 	
const 
int 
size 
= 
$num 
; 
var 
maxValue 
= 
ValidCharacters *
.* +
Length+ 1
;1 2
var 
random 
= 
new 
Random #
(# $
DateTime$ ,
., -
Now- 0
.0 1
Millisecond1 <
)< =
;= >
var 
password 
= 
new 
StringBuilder ,
(, -
size- 1
)1 2
;2 3
for 
( 
var 
i 
= 
$num 
; 
i 
< 
size  $
;$ %
i& '
++' )
)) *
password 
. 
Append 
(  
ValidCharacters  /
[/ 0
random0 6
.6 7
Next7 ;
(; <
$num< =
,= >
maxValue? G
)G H
]H I
)I J
;J K
return 
password 
. 
ToString $
($ %
)% &
;& '
} 	
} 
} ã!
ÉC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\PessoaService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
PessoaService 
:  
IPessoaService! /
{ 
private 
readonly 
IPessoaRepository *
_pessoaRepository+ <
;< =
public 
PessoaService 
( 
IPessoaRepository .
pessoaRepository/ ?
)? @
{ 	
_pessoaRepository 
= 
pessoaRepository  0
;0 1
} 	
public 
void 
Dispose 
( 
) 
{ 	
_pessoaRepository 
. 
Dispose %
(% &
)& '
;' (
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
public 
async 
Task 
< 
Pessoa  
>  !
AddAsync" *
(* +
Pessoa+ 1
obj2 5
)5 6
{ 	
return 
await 
_pessoaRepository *
.* +
AddAsync+ 3
(3 4
obj4 7
)7 8
;8 9
} 	
public 
async 
Task 
< 
Pessoa  
>  !
GetByIdAsync" .
(. /
Guid/ 3
id4 6
)6 7
{   	
return!! 
await!! 
_pessoaRepository!! *
.!!* +
GetByIdAsync!!+ 7
(!!7 8
id!!8 :
)!!: ;
;!!; <
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
IEnumerable$$ %
<$$% &
Pessoa$$& ,
>$$, -
>$$- .
GetAllAsync$$/ :
($$: ;
)$$; <
{%% 	
return&& 
await&& 
_pessoaRepository&& *
.&&* +
GetAllAsync&&+ 6
(&&6 7
)&&7 8
;&&8 9
}'' 	
public)) 
async)) 
Task)) 
<)) 
Pessoa))  
>))  !
UpdateAsync))" -
())- .
Pessoa)). 4
obj))5 8
)))8 9
{** 	
return++ 
await++ 
_pessoaRepository++ *
.++* +
UpdateAsync+++ 6
(++6 7
obj++7 :
)++: ;
;++; <
},, 	
public.. 
async.. 
Task.. 
RemoveAsync.. %
(..% &
Guid..& *
id..+ -
)..- .
{// 	
await00 
_pessoaRepository00 #
.00# $
RemoveAsync00$ /
(00/ 0
id000 2
)002 3
;003 4
}11 	
public33 
async33 
Task33 
<33 
IEnumerable33 %
<33% &
Pessoa33& ,
>33, -
>33- .
SearchAsync33/ :
(33: ;

Expression33; E
<33E F
Func33F J
<33J K
Pessoa33K Q
,33Q R
bool33S W
>33W X
>33X Y
	predicate33Z c
)33c d
{44 	
return55 
await55 
_pessoaRepository55 *
.55* +
SearchAsync55+ 6
(556 7
	predicate557 @
)55@ A
;55A B
}66 	
public88 
async88 
Task88 
<88 
Pessoa88  
>88  !
GetOneAsync88" -
(88- .

Expression88. 8
<888 9
Func889 =
<88= >
Pessoa88> D
,88D E
bool88F J
>88J K
>88K L
	predicate88M V
)88V W
{99 	
return:: 
await:: 
_pessoaRepository:: *
.::* +
GetOneAsync::+ 6
(::6 7
	predicate::7 @
)::@ A
;::A B
};; 	
}<< 
}== Î"
ãC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\PrimeiroAcessoService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class !
PrimeiroAcessoService &
:' ("
IPrimeiroAcessoService) ?
{ 
private 
readonly %
IPrimeiroAcessoRepository 2%
_primeiroAcessoRepository3 L
;L M
public !
PrimeiroAcessoService $
($ %%
IPrimeiroAcessoRepository% >$
primeiroAcessoRepository? W
)W X
{ 	%
_primeiroAcessoRepository %
=& '$
primeiroAcessoRepository( @
;@ A
} 	
public 
void 
Dispose 
( 
) 
{ 	%
_primeiroAcessoRepository %
.% &
Dispose& -
(- .
). /
;/ 0
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
public 
async 
Task 
< 
PrimeiroAcesso (
>( )
AddAsync* 2
(2 3
PrimeiroAcesso3 A
objB E
)E F
{ 	
return 
await %
_primeiroAcessoRepository 2
.2 3
AddAsync3 ;
(; <
obj< ?
)? @
;@ A
} 	
public 
async 
Task 
< 
PrimeiroAcesso (
>( )
GetByIdAsync* 6
(6 7
Guid7 ;
id< >
)> ?
{   	
return!! 
await!! %
_primeiroAcessoRepository!! 2
.!!2 3
GetByIdAsync!!3 ?
(!!? @
id!!@ B
)!!B C
;!!C D
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
IEnumerable$$ %
<$$% &
PrimeiroAcesso$$& 4
>$$4 5
>$$5 6
GetAllAsync$$7 B
($$B C
)$$C D
{%% 	
return&& 
await&& %
_primeiroAcessoRepository&& 2
.&&2 3
GetAllAsync&&3 >
(&&> ?
)&&? @
;&&@ A
}'' 	
public)) 
async)) 
Task)) 
<)) 
PrimeiroAcesso)) (
>))( )
UpdateAsync))* 5
())5 6
PrimeiroAcesso))6 D
obj))E H
)))H I
{** 	
return++ 
await++ %
_primeiroAcessoRepository++ 2
.++2 3
UpdateAsync++3 >
(++> ?
obj++? B
)++B C
;++C D
},, 	
public.. 
async.. 
Task.. 
RemoveAsync.. %
(..% &
Guid..& *
id..+ -
)..- .
{// 	
await00 %
_primeiroAcessoRepository00 +
.00+ ,
RemoveAsync00, 7
(007 8
id008 :
)00: ;
;00; <
}11 	
public33 
async33 
Task33 
<33 
IEnumerable33 %
<33% &
PrimeiroAcesso33& 4
>334 5
>335 6
SearchAsync337 B
(33B C

Expression33C M
<33M N
Func33N R
<33R S
PrimeiroAcesso33S a
,33a b
bool33c g
>33g h
>33h i
	predicate33j s
)33s t
{44 	
return55 
await55 %
_primeiroAcessoRepository55 2
.552 3
SearchAsync553 >
(55> ?
	predicate55? H
)55H I
;55I J
}66 	
public88 
async88 
Task88 
<88 
PrimeiroAcesso88 (
>88( )
GetOneAsync88* 5
(885 6

Expression886 @
<88@ A
Func88A E
<88E F
PrimeiroAcesso88F T
,88T U
bool88V Z
>88Z [
>88[ \
	predicate88] f
)88f g
{99 	
return:: 
await:: %
_primeiroAcessoRepository:: 2
.::2 3
GetOneAsync::3 >
(::> ?
	predicate::? H
)::H I
;::I J
};; 	
}<< 
}== « 
ÖC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\ProcessoService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
ProcessoService  
:! "
IProcessoService# 3
{ 
private 
readonly 
IProcessoRepository ,
_processoRepository- @
;@ A
public 
ProcessoService 
( 
IProcessoRepository 2
processoRepository3 E
)E F
{ 	
_processoRepository 
=  !
processoRepository" 4
;4 5
} 	
public 
void 
Dispose 
( 
) 
{ 	
_processoRepository 
.  
Dispose  '
(' (
)( )
;) *
} 	
public 
async 
Task 
< 
Processo "
>" #
AddAsync$ ,
(, -
Processo- 5
obj6 9
)9 :
{ 	
return 
await 
_processoRepository ,
., -
AddAsync- 5
(5 6
obj6 9
)9 :
;: ;
} 	
public 
async 
Task 
< 
Processo "
>" #
GetByIdAsync$ 0
(0 1
Guid1 5
id6 8
)8 9
{ 	
return   
await   
_processoRepository   ,
.  , -
GetByIdAsync  - 9
(  9 :
id  : <
)  < =
;  = >
}!! 	
public## 
async## 
Task## 
<## 
IEnumerable## %
<##% &
Processo##& .
>##. /
>##/ 0
GetAllAsync##1 <
(##< =
)##= >
{$$ 	
return%% 
await%% 
_processoRepository%% ,
.%%, -
GetAllAsync%%- 8
(%%8 9
)%%9 :
;%%: ;
}&& 	
public(( 
async(( 
Task(( 
<(( 
Processo(( "
>((" #
UpdateAsync(($ /
(((/ 0
Processo((0 8
obj((9 <
)((< =
{)) 	
return** 
await** 
_processoRepository** ,
.**, -
UpdateAsync**- 8
(**8 9
obj**9 <
)**< =
;**= >
}++ 	
public-- 
async-- 
Task-- 
RemoveAsync-- %
(--% &
Guid--& *
id--+ -
)--- .
{.. 	
await// 
_processoRepository// $
.//$ %
RemoveAsync//% 0
(//0 1
id//1 3
)//3 4
;//4 5
}00 	
public22 
async22 
Task22 
<22 
IEnumerable22 %
<22% &
Processo22& .
>22. /
>22/ 0
SearchAsync221 <
(22< =

Expression22= G
<22G H
Func22H L
<22L M
Processo22M U
,22U V
bool22W [
>22[ \
>22\ ]
	predicate22^ g
)22g h
{33 	
return44 
await44 
_processoRepository44 ,
.44, -
SearchAsync44- 8
(448 9
	predicate449 B
)44B C
;44C D
}55 	
public77 
async77 
Task77 
<77 
Processo77 "
>77" #
GetOneAsync77$ /
(77/ 0

Expression770 :
<77: ;
Func77; ?
<77? @
Processo77@ H
,77H I
bool77J N
>77N O
>77O P
	predicate77Q Z
)77Z [
{88 	
return99 
await99 
_processoRepository99 ,
.99, -
GetOneAsync99- 8
(998 9
	predicate999 B
)99B C
;99C D
}:: 	
};; 
}<< √!
ÖC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\TelefoneService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
TelefoneService  
:! "
ITelefoneService# 3
{ 
private 
readonly 
ITelefoneRepository ,
_telefoneRepository- @
;@ A
public 
TelefoneService 
( 
ITelefoneRepository 2
telefoneRepository3 E
)E F
{ 	
_telefoneRepository 
=  !
telefoneRepository" 4
;4 5
} 	
public 
void 
Dispose 
( 
) 
{ 	
_telefoneRepository 
.  
Dispose  '
(' (
)( )
;) *
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
public 
async 
Task 
< 
Telefone "
>" #
AddAsync$ ,
(, -
Telefone- 5
obj6 9
)9 :
{ 	
return 
await 
_telefoneRepository ,
., -
AddAsync- 5
(5 6
obj6 9
)9 :
;: ;
} 	
public 
async 
Task 
< 
Telefone "
>" #
GetByIdAsync$ 0
(0 1
Guid1 5
id6 8
)8 9
{   	
return!! 
await!! 
_telefoneRepository!! ,
.!!, -
GetByIdAsync!!- 9
(!!9 :
id!!: <
)!!< =
;!!= >
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
IEnumerable$$ %
<$$% &
Telefone$$& .
>$$. /
>$$/ 0
GetAllAsync$$1 <
($$< =
)$$= >
{%% 	
return&& 
await&& 
_telefoneRepository&& ,
.&&, -
GetAllAsync&&- 8
(&&8 9
)&&9 :
;&&: ;
}'' 	
public)) 
async)) 
Task)) 
<)) 
Telefone)) "
>))" #
UpdateAsync))$ /
())/ 0
Telefone))0 8
obj))9 <
)))< =
{** 	
return++ 
await++ 
_telefoneRepository++ ,
.++, -
UpdateAsync++- 8
(++8 9
obj++9 <
)++< =
;++= >
},, 	
public.. 
async.. 
Task.. 
RemoveAsync.. %
(..% &
Guid..& *
id..+ -
)..- .
{// 	
await00 
_telefoneRepository00 %
.00% &
RemoveAsync00& 1
(001 2
id002 4
)004 5
;005 6
}11 	
public33 
async33 
Task33 
<33 
IEnumerable33 %
<33% &
Telefone33& .
>33. /
>33/ 0
SearchAsync331 <
(33< =

Expression33= G
<33G H
Func33H L
<33L M
Telefone33M U
,33U V
bool33W [
>33[ \
>33\ ]
	predicate33^ g
)33g h
{44 	
return55 
await55 
_telefoneRepository55 -
.55- .
SearchAsync55. 9
(559 :
	predicate55: C
)55C D
;55D E
}66 	
public88 
async88 
Task88 
<88 
Telefone88 "
>88" #
GetOneAsync88$ /
(88/ 0

Expression880 :
<88: ;
Func88; ?
<88? @
Telefone88@ H
,88H I
bool88J N
>88N O
>88O P
	predicate88Q Z
)88Z [
{99 	
return:: 
await:: 
_telefoneRepository:: ,
.::, -
GetOneAsync::- 8
(::8 9
	predicate::9 B
)::B C
;::C D
};; 	
}<< 
}== ≠!
äC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\TipoDocumentoService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class  
TipoDocumentoService %
:& '!
ITipoDocumentoService( =
{ 
private 
readonly $
ITipoDocumentoRepository 1$
_tipoDocumentoRepository2 J
;J K
public  
TipoDocumentoService #
(# $$
ITipoDocumentoRepository$ <#
tipoDocumentoRepository= T
)T U
{ 	$
_tipoDocumentoRepository $
=% &#
tipoDocumentoRepository' >
;> ?
} 	
public 
void 
Dispose 
( 
) 
{ 	$
_tipoDocumentoRepository $
.$ %
Dispose% ,
(, -
)- .
;. /
} 	
public 
async 
Task 
< 
TipoDocumento '
>' (
AddAsync) 1
(1 2
TipoDocumento2 ?
obj@ C
)C D
{ 	
return
 
await $
_tipoDocumentoRepository 0
.0 1
AddAsync1 9
(9 :
obj: =
)= >
;> ?
} 	
public 
async 
Task 
< 
TipoDocumento '
>' (
GetByIdAsync) 5
(5 6
Guid6 :
id; =
)= >
{ 	
return 
await $
_tipoDocumentoRepository 1
.1 2
GetByIdAsync2 >
(> ?
id? A
)A B
;B C
}   	
public"" 
async"" 
Task"" 
<"" 
IEnumerable"" %
<""% &
TipoDocumento""& 3
>""3 4
>""4 5
GetAllAsync""6 A
(""A B
)""B C
{## 	
return$$ 
await$$ $
_tipoDocumentoRepository$$ 1
.$$1 2
GetAllAsync$$2 =
($$= >
)$$> ?
;$$? @
}%% 	
public'' 
async'' 
Task'' 
<'' 
TipoDocumento'' '
>''' (
UpdateAsync'') 4
(''4 5
TipoDocumento''5 B
obj''C F
)''F G
{(( 	
return)) 
await)) $
_tipoDocumentoRepository)) 1
.))1 2
UpdateAsync))2 =
())= >
obj))> A
)))A B
;))B C
}** 	
public,, 
async,, 
Task,, 
RemoveAsync,, %
(,,% &
Guid,,& *
id,,+ -
),,- .
{-- 	
await.. $
_tipoDocumentoRepository.. *
...* +
RemoveAsync..+ 6
(..6 7
id..7 9
)..9 :
;..: ;
}// 	
public11 
Task11 
<11 
IEnumerable11 
<11  
TipoDocumento11  -
>11- .
>11. /
SearchAsync110 ;
(11; <

Expression11< F
<11F G
Func11G K
<11K L
TipoDocumento11L Y
,11Y Z
bool11[ _
>11_ `
>11` a
	predicate11b k
)11k l
{22 	
return33 $
_tipoDocumentoRepository33 +
.33+ ,
SearchAsync33, 7
(337 8
	predicate338 A
)33A B
;33B C
}44 	
public66 
async66 
Task66 
<66 
TipoDocumento66 '
>66' (
GetOneAsync66) 4
(664 5

Expression665 ?
<66? @
Func66@ D
<66D E
TipoDocumento66E R
,66R S
bool66T X
>66X Y
>66Y Z
	predicate66[ d
)66d e
{77 	
return88 
await88 $
_tipoDocumentoRepository88 1
.881 2
GetOneAsync882 =
(88= >
	predicate88> G
)88G H
;88H I
}99 	
}:: 
};; ß!
ÑC:\Users\alesi\source\repos\SistemaDeConvocacoesCore\SistemaDeConvocacoes\src\SistemaDeConvocacoes.Domain\Services\UsuarioService.cs
	namespace		 	 
SistemaDeConvocacoes		
 
.		 
Domain		 %
.		% &
Services		& .
{

 
public 

class 
UsuarioService 
:  !
IUsuarioService" 1
{ 
private 
readonly 
IUsuarioRepository +
_usuarioRepository, >
;> ?
public 
UsuarioService 
( 
IUsuarioRepository 0
usuarioRepository1 B
)B C
{ 	
_usuarioRepository 
=  
usuarioRepository! 2
;2 3
} 	
public 
void 
Dispose 
( 
) 
{ 	
_usuarioRepository 
. 
Dispose &
(& '
)' (
;( )
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
public 
async 
Task 
< 
Usuario !
>! "
AddAsync# +
(+ ,
Usuario, 3
obj4 7
)7 8
{ 	
return 
await 
_usuarioRepository +
.+ ,
AddAsync, 4
(4 5
obj5 8
)8 9
;9 :
} 	
public 
async 
Task 
< 
Usuario !
>! "
GetByIdAsync# /
(/ 0
Guid0 4
id5 7
)7 8
{   	
return!! 
await!! 
_usuarioRepository!! +
.!!+ ,
GetByIdAsync!!, 8
(!!8 9
id!!9 ;
)!!; <
;!!< =
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
IEnumerable$$ %
<$$% &
Usuario$$& -
>$$- .
>$$. /
GetAllAsync$$0 ;
($$; <
)$$< =
{%% 	
return&& 
await&& 
_usuarioRepository&& +
.&&+ ,
GetAllAsync&&, 7
(&&7 8
)&&8 9
;&&9 :
}'' 	
public)) 
async)) 
Task)) 
<)) 
Usuario)) !
>))! "
UpdateAsync))# .
()). /
Usuario))/ 6
obj))7 :
))): ;
{** 	
return++ 
await++ 
_usuarioRepository++ +
.+++ ,
UpdateAsync++, 7
(++7 8
obj++8 ;
)++; <
;++< =
},, 	
public.. 
async.. 
Task.. 
RemoveAsync.. %
(..% &
Guid..& *
id..+ -
)..- .
{// 	
await00 
_usuarioRepository00 $
.00$ %
RemoveAsync00% 0
(000 1
id001 3
)003 4
;004 5
}11 	
public33 
async33 
Task33 
<33 
IEnumerable33 %
<33% &
Usuario33& -
>33- .
>33. /
SearchAsync330 ;
(33; <

Expression33< F
<33F G
Func33G K
<33K L
Usuario33L S
,33S T
bool33U Y
>33Y Z
>33Z [
	predicate33\ e
)33e f
{44 	
return55 
await55 
_usuarioRepository55 +
.55+ ,
SearchAsync55, 7
(557 8
	predicate558 A
)55A B
;55B C
}66 	
public88 
async88 
Task88 
<88 
Usuario88 !
>88! "
GetOneAsync88# .
(88. /

Expression88/ 9
<889 :
Func88: >
<88> ?
Usuario88? F
,88F G
bool88H L
>88L M
>88M N
	predicate88O X
)88X Y
{99 	
return:: 
await:: 
_usuarioRepository:: +
.::+ ,
GetOneAsync::, 7
(::7 8
	predicate::8 A
)::A B
;::B C
};; 	
}<< 
}== 